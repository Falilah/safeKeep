{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamondCut.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct IDiamondCut.FacetCut[]",
          "name": "_selectorModule",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamondCut.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct IDiamondCut.FacetCut[]",
          "name": "_tokenModule",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "_vaultOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_backupAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pingWindow",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vaultID",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EmptyCalldata",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "ImmutableFunction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InValidFacetCutAction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InitCallFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MustBeZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoCode",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoSelectorsInFacet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonEmptyCalldata",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "NonExistentSelector",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "SameSelectorReplacement",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "SelectorExists",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "vaultFactoryDiamond",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "582:2273:0:-:0;;;651:1008;;;;;;;;;;;;;;;;;;:::i;:::-;910:54;932:15;957:1;910:54;;;;;;;;;;;;:21;;;;;:54;;:::i;:::-;974:51;996:12;1018:1;974:51;;;;;;;;;;;;:21;;;;;:51;;:::i;:::-;-1:-1:-1;;;;;1039:28:0;;1035:66;;1076:25;;-1:-1:-1;;;1076:25:0;;;;;;;;;;;1035:66;1160:35;1198:58;:56;;;;;:58;;:::i;:::-;1160:96;;1300:4;1266:6;:19;;:31;;;;-1:-1:-1;;;4965:23:34;;5013:1;5004:11;;4763:258;1266:31:0;;;;;;;;;;;;;;;;;:38;;;;;-1:-1:-1;;1266:38:0;;;;;;-1:-1:-1;;;5228:20:34;;1314:19:0;;;5273:1:34;5264:11;;1314:28:0;;;;;;;;;;;:35;;;;;-1:-1:-1;1314:35:0;;;;;;1359:20;;;:37;;;;;;;-1:-1:-1;1359:37:0;;;;;;;;;;;;;;;-1:-1:-1;;;1359:37:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1406:20:0;;;:34;;;;;;;-1:-1:-1;1406:34:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1406:34:0;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1450:20:0;;;:37;;-1:-1:-1;;;;;;1450:37:0;-1:-1:-1;;;;;1450:37:0;;;;;1497:17;;;:31;;;1538:14;;;:25;;;1573:37;1598:11;1573:24;;;;;;;:37;;:::i;:::-;-1:-1:-1;;1620:19:0;:32;;-1:-1:-1;;;;;;1620:32:0;1642:10;1620:32;;;-1:-1:-1;582:2273:0;;-1:-1:-1;;;;582:2273:0;2333:1268:13;2502:18;2484:1007;2547:11;:18;2534:10;:31;2484:1007;;;2616:33;2652:11;2664:10;2652:23;;;;;;;;:::i;:::-;;;;;;;:30;;;2616:66;;2710:30;2700:40;;;;;;;;:::i;:::-;:6;:40;;;;;;;;:::i;:::-;;2696:785;;2760:151;2794:11;2806:10;2794:23;;;;;;;;:::i;:::-;;;;;;;:36;;;2852:11;2864:10;2852:23;;;;;;;;:::i;:::-;;;;;;;:41;;;2760:12;;;:151;;:::i;:::-;2696:785;;;2946:34;2936:6;:44;;;;;;;;:::i;:::-;;2932:549;;3000:155;3038:11;3050:10;3038:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3096:11;3108:10;3096:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3000:16;;;:155;;:::i;2932:549::-;3190:33;3180:6;:43;;;;;;;;:::i;:::-;;3176:305;;3243:154;3280:11;3292:10;3280:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3338:11;3350:10;3338:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3243:15;;;:154;;:::i;3176:305::-;3443:23;;-1:-1:-1;;;3443:23:13;;;;;;;;;;;3176:305;-1:-1:-1;2579:12:13;;;;:::i;:::-;;;;2484:1007;;;;3505:41;3516:11;3529:5;3536:9;3505:41;;;;;;;;:::i;:::-;;;;;;;;3556:38;3577:5;3584:9;3556:20;:38::i;:::-;2333:1268;;;:::o;1271:397:19:-;1356:41;1413:13;1429:107;1458:26;;;;;;;;;;;;;-1:-1:-1;;;1458:26:19;;;1498:28;;;;;;;;;;;;;-1:-1:-1;;;1498:28:19;;;1429:15;;;:107;;:::i;:::-;456:32;1569:17;;1271:397;-1:-1:-1;;1271:397:19:o;1167:315:13:-;1228:35;1266:58;:56;;;;;:58;;:::i;:::-;1358:17;;;;;-1:-1:-1;;;;;1385:29:13;;;-1:-1:-1;;;;;;1385:29:13;;;;;;;1429:46;;1228:96;;-1:-1:-1;1358:17:13;;;;1429:46;;1334:21;;1429:46;1218:264;;1167:315;:::o;3607:1232::-;3762:1;3733:18;:25;:30;3729:63;;3772:20;;-1:-1:-1;;;3772:20:13;;;;;;;;;;;3729:63;3802:35;3840:58;:56;;;;;:58;;:::i;:::-;3802:96;-1:-1:-1;;;;;;3912:27:13;;3908:55;;3948:15;;-1:-1:-1;;;3948:15:13;;;;;;;;;;;3908:55;-1:-1:-1;;;;;4019:61:13;;3973:23;4019:61;;;:46;;;:61;;;;;:120;;-1:-1:-1;;;;;4217:21:13;;;;4213:83;;4254:31;4263:6;4271:13;4254:8;:31::i;:::-;4323:21;4305:528;4374:18;:25;4358:13;:41;4305:528;;;4453:15;4471:18;4490:13;4471:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;4544:60:13;;4518:23;4544:60;;;;;;;;;;;:90;4471:33;;-1:-1:-1;;;;;;4544:90:13;4652:29;;4648:66;;4690:24;;-1:-1:-1;;;4690:24:13;;-1:-1:-1;;;;;;11307:33:34;;4690:24:13;;;11289:52:34;11262:18;;4690:24:13;;;;;;;;4648:66;-1:-1:-1;;;;;;7565:57:13;;:46;:57;;;;;;;;;;;:115;;-1:-1:-1;;;;;7565:115:13;;;-1:-1:-1;;;;;;;;7565:115:13;;;;;;7690:44;;;;;-1:-1:-1;7690:29:13;;;:44;;;;;:100;;;;;;;;;;;;;;;;;;;;;;;;;7565:115;7690:100;;;;;;;;;;;;;;;;;;;;;7800:57;;;;;;;:99;;-1:-1:-1;;;;;;7800:99:13;;;;4804:18;;;;:::i;:::-;;;;4439:394;;4413:15;;;;;:::i;:::-;;;;4305:528;;;;3719:1120;;3607:1232;;:::o;4845:1327::-;5004:1;4975:18;:25;:30;4971:63;;5014:20;;-1:-1:-1;;;5014:20:13;;;;;;;;;;;4971:63;5044:35;5082:58;:56;;;;;:58;;:::i;:::-;5044:96;-1:-1:-1;;;;;;5154:27:13;;5150:55;;5190:15;;-1:-1:-1;;;5190:15:13;;;;;;;;;;;5150:55;-1:-1:-1;;;;;5261:61:13;;5215:23;5261:61;;;:46;;;:61;;;;;:120;;-1:-1:-1;;;;;5459:21:13;;;;5455:83;;5496:31;5505:6;5513:13;5496:8;:31::i;:::-;5565:21;5547:619;5616:18;:25;5600:13;:41;5547:619;;;5695:15;5713:18;5732:13;5713:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;5786:60:13;;5760:23;5786:60;;;;;;;;;;;:90;5713:33;;-1:-1:-1;;;;;;5786:90:13;;;;5894:32;;;;5890:94;;5951:33;;-1:-1:-1;;;5951:33:13;;-1:-1:-1;;;;;;11307:33:34;;5951::13;;;11289:52:34;11262:18;;5951:33:13;11145:202:34;5890:94:13;5998:49;6013:6;6021:15;6038:8;5998:14;:49::i;:::-;-1:-1:-1;;;;;;7565:57:13;;:46;:57;;;;;;;;;;;:115;;-1:-1:-1;;;;;7565:115:13;;;-1:-1:-1;;;;;;;;7565:115:13;;;;;;7690:44;;;;;-1:-1:-1;7690:29:13;;;:44;;;;;:100;;;;;;;;;;;;;;;;;;;;;;;;;7565:115;7690:100;;;;;;;;;;;;;;;;;;;;;7800:57;;;;;;;:99;;-1:-1:-1;;;;;;7800:99:13;;;;6137:18;;;;:::i;:::-;;;;5681:485;;5655:15;;;;;:::i;:::-;;;;5547:619;;6178:847;6336:1;6307:18;:25;:30;6303:63;;6346:20;;-1:-1:-1;;;6346:20:13;;;;;;;;;;;6303:63;6376:35;6414:58;:56;;;;;:58;;:::i;:::-;6376:96;-1:-1:-1;;;;;;6551:27:13;;;6547:59;;6587:19;;-1:-1:-1;;;6587:19:13;;;;;;;;;;;6547:59;6634:21;6616:403;6685:18;:25;6669:13;:41;6616:403;;;6764:15;6782:18;6801:13;6782:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;6855:60:13;;6829:23;6855:60;;;;;;;;;;;:90;6782:33;;-1:-1:-1;;;;;;6855:90:13;6959:49;6855:6;:90;6782:33;6959:14;:49::i;:::-;6750:269;;6724:15;;;;;:::i;:::-;;;;6616:403;;;;6293:732;6178:847;;:::o;10464:736::-;-1:-1:-1;;;;;10578:19:13;;10574:620;;10617:16;;:20;10613:51;;10646:18;;-1:-1:-1;;;10646:18:13;;;;;;;;;;;10613:51;10464:736;;:::o;10574:620::-;10699:9;:16;10719:1;10699:21;10695:49;;10729:15;;-1:-1:-1;;;10729:15:13;;;;;;;;;;;10695:49;-1:-1:-1;;;;;10762:22:13;;10779:4;10762:22;10758:90;;10804:29;10827:5;10804:22;:29::i;:::-;10862:12;10876:18;10898:5;-1:-1:-1;;;;;10898:18:13;10917:9;10898:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10861:66;;;;10946:7;10941:243;;10977:12;;:16;10973:197;;11074:5;11060:21;;-1:-1:-1;;;11060:21:13;;;;;;;;:::i;10973:197::-;11135:16;;-1:-1:-1;;;11135:16:13;;;;;;;;;;;657:216:19;781:12;839:11;852;828:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;812:54;;;;;;805:61;;657:216;;;;:::o;7031:346:13:-;7150:37;7173:13;7150:22;:37::i;:::-;7291:21;;;:28;;-1:-1:-1;;;;;7197:57:13;;;;;;;:42;;;;:57;;;;;;;:91;;:122;;;7329:41;;;;;;;;;;;;;;-1:-1:-1;;;;;;7329:41:13;;;;;;7031:346::o;7912:2546::-;-1:-1:-1;;;;;8067:27:13;;8063:70;;8103:30;;-1:-1:-1;;;8103:30:13;;-1:-1:-1;;;;;;11307:33:34;;8103:30:13;;;11289:52:34;11262:18;;8103:30:13;11145:202:34;8063:70:13;8249:4;-1:-1:-1;;;;;8224:30:13;;;8220:71;;8263:28;;-1:-1:-1;;;8263:28:13;;-1:-1:-1;;;;;;11307:33:34;;8263:28:13;;;11289:52:34;11262:18;;8263:28:13;11145:202:34;8220:71:13;-1:-1:-1;;;;;;8402:57:13;;8375:24;8402:57;;;;;;;;;;;:95;-1:-1:-1;;;;;8538:57:13;;;;8649:1;8538:42;;;:57;;;;;;:108;-1:-1:-1;;;8402:95:13;;;-1:-1:-1;;;;;8402:95:13;;8375:24;8538:112;;;:::i;:::-;8507:143;;8752:20;8732:16;:40;8728:497;;-1:-1:-1;;;;;8810:61:13;;8788:19;8810:61;;;:46;;;:61;;;;;:118;;8907:20;;8810:118;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;8942:44:13;;;;:29;;;:44;;;;;;;:110;;8810:118;;;;;;;;;;;;;;-1:-1:-1;8810:118:13;;8942:44;9022:16;;8942:110;;;;;;:::i;:::-;;;;;;;;;;;;;:125;;;:110;;;;;;:125;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9081:64:13;;;;;;;;;;;;:133;;-1:-1:-1;;;;;9081:133:13;-1:-1:-1;;;;;;;;9081:133:13;;;;;;8728:497;-1:-1:-1;;;;;9270:44:13;;;;;;:29;;;:44;;;;;:68;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;9270:68:13;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9355:44:13;;;;;;;;;;9348:51;;;9494:25;;;9490:962;;9661:21;;;:28;9626:32;;9661;;9692:1;;9661:32;:::i;:::-;-1:-1:-1;;;;;9738:61:13;;9707:28;9738:61;;;:46;;;;:61;;;;;;:99;;9626:67;;-1:-1:-1;9855:48:13;;;9851:430;;9923:24;9950:6;:21;;9993:24;9950:85;;;;;;;;:::i;:::-;;;;;;;;;;;10053:21;;;:43;;-1:-1:-1;;;;;9950:85:13;;;;-1:-1:-1;9950:85:13;;10075:20;;10053:43;;;;;;:::i;:::-;;;;;;;;;;;;;:62;;-1:-1:-1;;;;;;10053:62:13;-1:-1:-1;;;;;10053:62:13;;;;;;10133:68;;;;;;-1:-1:-1;10133:50:13;;;:68;;;;;;:110;:133;;;9851:430;10294:6;:21;;:27;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;10294:27:13;;;;;-1:-1:-1;;;;;;10294:27:13;;;;;;;;;-1:-1:-1;;;;;10342:61:13;;;;10294:27;10342:46;;;:61;;;;;;:99;10335:106;-1:-1:-1;;8053:2405:13;;7912:2546;;;:::o;11206:230::-;11350:22;;11395:17;11391:38;;11421:8;;-1:-1:-1;;;11421:8:13;;;;;;;;;;;14:127:34;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;-1:-1:-1;;;;;280:34:34;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:275::-;475:2;469:9;540:2;521:13;;-1:-1:-1;;517:27:34;505:40;;-1:-1:-1;;;;;560:34:34;;596:22;;;557:62;554:88;;;622:18;;:::i;:::-;658:2;651:22;404:275;;-1:-1:-1;404:275:34:o;684:191::-;752:4;-1:-1:-1;;;;;774:30:34;;771:56;;;807:18;;:::i;:::-;-1:-1:-1;852:1:34;848:14;864:4;844:25;;684:191::o;880:177::-;959:13;;-1:-1:-1;;;;;1001:31:34;;991:42;;981:70;;1047:1;1044;1037:12;981:70;880:177;;;:::o;1062:2714::-;1135:5;1188:3;1181:4;1173:6;1169:17;1165:27;1155:55;;1206:1;1203;1196:12;1155:55;1235:6;1229:13;1261:4;1285:68;1301:51;1349:2;1301:51;:::i;:::-;1285:68;:::i;:::-;1387:15;;;1449:1;1489:11;;;1477:24;;1473:33;;;1418:12;;;;1375:3;1518:15;;;1515:35;;;1546:1;1543;1536:12;1515:35;1582:2;1574:6;1570:15;1594:2153;1610:6;1605:3;1602:15;1594:2153;;;1683:10;;-1:-1:-1;;;;;1750:19:34;;;1747:109;;;1810:1;1839:2;1835;1828:14;1747:109;1879:24;;;;1926:4;1954:12;;;-1:-1:-1;;1950:26:34;1946:35;-1:-1:-1;1943:125:34;;;2022:1;2051:2;2047;2040:14;1943:125;2094:22;;:::i;:::-;2143:42;2181:2;2177;2173:11;2143:42;:::i;:::-;2136:5;2129:57;2209:2;2253;2249;2245:11;2239:18;2292:1;2283:7;2280:14;2270:115;;2337:1;2367:3;2362;2355:16;2270:115;2405:14;;;2398:31;2464:11;;;2458:18;;2492:16;;;2489:109;;;2550:1;2580:3;2575;2568:16;2489:109;2630:8;2626:2;2622:17;2611:28;;2680:3;2675:2;2670:3;2666:12;2662:22;2652:123;;2727:1;2716:12;;2757:3;2752;2745:16;2652:123;2814:2;2809:3;2805:12;2799:19;2788:30;;2844:69;2860:52;2908:3;2860:52;:::i;2844:69::-;2957:18;;;3053:12;;;3044:22;;3040:31;;;2997:14;;;;-1:-1:-1;3087:17:34;;;3084:110;;;3146:1;3176:3;3171;3164:16;3084:110;3220:12;;;;3245:387;3263:8;3256:5;3253:19;3245:387;;;3346:12;;-1:-1:-1;;;;;;3397:34:34;;3385:47;;3375:164;;3483:1;3517:3;3512;3505:16;3375:164;3556:22;;3284:14;;;;3604;;;;3245:387;;;3652:14;;;3645:29;3687:18;;-1:-1:-1;;;3725:12:34;;;;1627;;1594:2153;;;-1:-1:-1;3765:5:34;;1062:2714;-1:-1:-1;;;;;;;1062:2714:34:o;3781:977::-;3998:6;4006;4014;4022;4030;4038;4091:3;4079:9;4070:7;4066:23;4062:33;4059:53;;;4108:1;4105;4098:12;4059:53;4135:16;;-1:-1:-1;;;;;4200:14:34;;;4197:34;;;4227:1;4224;4217:12;4197:34;4250:80;4322:7;4313:6;4302:9;4298:22;4250:80;:::i;:::-;4240:90;;4376:2;4365:9;4361:18;4355:25;4339:41;;4405:2;4395:8;4392:16;4389:36;;;4421:1;4418;4411:12;4389:36;;4444:82;4518:7;4507:8;4496:9;4492:24;4444:82;:::i;:::-;4434:92;;;4545:49;4590:2;4579:9;4575:18;4545:49;:::i;:::-;4535:59;;4613:49;4658:2;4647:9;4643:18;4613:49;:::i;:::-;4603:59;;4702:3;4691:9;4687:19;4681:26;4671:36;;4747:3;4736:9;4732:19;4726:26;4716:36;;3781:977;;;;;;;;:::o;5286:380::-;5365:1;5361:12;;;;5408;;;5429:61;;5483:4;5475:6;5471:17;5461:27;;5429:61;5536:2;5528:6;5525:14;5505:18;5502:38;5499:161;;5582:10;5577:3;5573:20;5570:1;5563:31;5617:4;5614:1;5607:15;5645:4;5642:1;5635:15;5499:161;;5286:380;;;:::o;5797:545::-;5899:2;5894:3;5891:11;5888:448;;;5935:1;5960:5;5956:2;5949:17;6005:4;6001:2;5991:19;6075:2;6063:10;6059:19;6056:1;6052:27;6046:4;6042:38;6111:4;6099:10;6096:20;6093:47;;;-1:-1:-1;6134:4:34;6093:47;6189:2;6184:3;6180:12;6177:1;6173:20;6167:4;6163:31;6153:41;;6244:82;6262:2;6255:5;6252:13;6244:82;;;6307:17;;;6288:1;6277:13;6244:82;;;6248:3;;;5797:545;;;:::o;6518:1352::-;6638:10;;-1:-1:-1;;;;;6660:30:34;;6657:56;;;6693:18;;:::i;:::-;6722:97;6812:6;6772:38;6804:4;6798:11;6772:38;:::i;:::-;6766:4;6722:97;:::i;:::-;6874:4;;6938:2;6927:14;;6955:1;6950:663;;;;7657:1;7674:6;7671:89;;;-1:-1:-1;7726:19:34;;;7720:26;7671:89;-1:-1:-1;;6475:1:34;6471:11;;;6467:24;6463:29;6453:40;6499:1;6495:11;;;6450:57;7773:81;;6920:944;;6950:663;5744:1;5737:14;;;5781:4;5768:18;;-1:-1:-1;;6986:20:34;;;7104:236;7118:7;7115:1;7112:14;7104:236;;;7207:19;;;7201:26;7186:42;;7299:27;;;;7267:1;7255:14;;;;7134:19;;7104:236;;;7108:3;7368:6;7359:7;7356:19;7353:201;;;7429:19;;;7423:26;-1:-1:-1;;7512:1:34;7508:14;;;7524:3;7504:24;7500:37;7496:42;7481:58;7466:74;;7353:201;-1:-1:-1;;;;;7600:1:34;7584:14;;;7580:22;7567:36;;-1:-1:-1;6518:1352:34:o;7875:127::-;7936:10;7931:3;7927:20;7924:1;7917:31;7967:4;7964:1;7957:15;7991:4;7988:1;7981:15;8007:127;8068:10;8063:3;8059:20;8056:1;8049:31;8099:4;8096:1;8089:15;8123:4;8120:1;8113:15;8139:127;8200:10;8195:3;8191:20;8188:1;8181:31;8231:4;8228:1;8221:15;8255:4;8252:1;8245:15;8271:135;8310:3;8331:17;;;8328:43;;8351:18;;:::i;:::-;-1:-1:-1;8398:1:34;8387:13;;8271:135::o;8520:250::-;8605:1;8615:113;8629:6;8626:1;8623:13;8615:113;;;8705:11;;;8699:18;8686:11;;;8679:39;8651:2;8644:10;8615:113;;;-1:-1:-1;;8762:1:34;8744:16;;8737:27;8520:250::o;8775:270::-;8816:3;8854:5;8848:12;8881:6;8876:3;8869:19;8897:76;8966:6;8959:4;8954:3;8950:14;8943:4;8936:5;8932:16;8897:76;:::i;:::-;9027:2;9006:15;-1:-1:-1;;9002:29:34;8993:39;;;;9034:4;8989:50;;8775:270;-1:-1:-1;;8775:270:34:o;9050:2090::-;9318:4;9347:2;9387;9376:9;9372:18;9417:2;9406:9;9399:21;9440:6;9475;9469:13;9506:6;9498;9491:22;9532:3;9522:13;;9566:2;9555:9;9551:18;9544:25;;9628:2;9618:6;9615:1;9611:14;9600:9;9596:30;9592:39;9650:4;9689:2;9681:6;9677:15;9710:1;9720:1249;9734:6;9731:1;9728:13;9720:1249;;;9799:22;;;-1:-1:-1;;9795:37:34;9783:50;;9856:13;;9943:9;;-1:-1:-1;;;;;9939:35:34;9924:51;;10014:11;;;10008:18;9896:15;;;;10066:1;10049:19;;10039:170;;10119:10;10114:3;10110:20;10107:1;10100:31;10158:4;10155:1;10148:15;10190:4;10187:1;10180:15;10039:170;10229:15;;;10222:37;10282:4;10327:11;;;10321:18;10359:15;;;10352:27;;;10440:21;;10474:24;;;;10564:23;;;;-1:-1:-1;;10520:15:34;;;;10625:236;10641:8;10636:3;10633:17;10625:236;;;10722:15;;-1:-1:-1;;;;;;10718:42:34;10704:57;;10830:17;;;;10669:1;10660:11;;;;;10787:14;;;;10625:236;;;-1:-1:-1;10947:12:34;;;;10884:5;-1:-1:-1;;;10912:15:34;;;;9756:1;9749:9;9720:1249;;;-1:-1:-1;;;;;;;8477:31:34;;11005:18;;;8465:44;11062:22;;;11055:4;11040:20;;11033:52;11102:32;11066:6;11119;11102:32;:::i;:::-;11094:40;9050:2090;-1:-1:-1;;;;;;;;;;9050:2090:34:o;11352:209::-;11390:3;-1:-1:-1;;;;;11460:14:34;;;-1:-1:-1;;;;;;11486:15:34;;11483:41;;11504:18;;:::i;:::-;11553:1;11540:15;;11352:209;-1:-1:-1;;;11352:209:34:o;11566:287::-;11695:3;11733:6;11727:13;11749:66;11808:6;11803:3;11796:4;11788:6;11784:17;11749:66;:::i;:::-;11831:16;;;;;11566:287;-1:-1:-1;;11566:287:34:o;11858:219::-;12007:2;11996:9;11989:21;11970:4;12027:44;12067:2;12056:9;12052:18;12044:6;12027:44;:::i;:::-;12019:52;11858:219;-1:-1:-1;;;11858:219:34:o;12082:381::-;12279:2;12268:9;12261:21;12242:4;12305:44;12345:2;12334:9;12330:18;12322:6;12305:44;:::i;:::-;12397:9;12389:6;12385:22;12380:2;12369:9;12365:18;12358:50;12425:32;12450:6;12442;12425:32;:::i;:::-;12417:40;12082:381;-1:-1:-1;;;;;12082:381:34:o;12468:128::-;12535:9;;;12556:11;;;12553:37;;;12570:18;;:::i;:::-;12468:128;;;;:::o;12601:127::-;12662:10;12657:3;12653:20;12650:1;12643:31;12693:4;12690:1;12683:15;12717:4;12714:1;12707:15;12601:127;582:2273:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100225760003560e01c806366bd442d146100cf57610029565b3661002957005b600061003361010b565b600080356001600160e01b0319168152602082905260409020549091506001600160a01b0316806100ab5760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f7420657869737460448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100ca573d6000f35b3d6000fd5b3480156100db57600080fd5b506000546100ef906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b60008061016860405180604001604052600f8152806020016e111a585b5bdb9910dd5d119858d95d608a1b81525060405180604001604052601181528060200170111a585b5bdb99131bdd5c19519858d95d607a1b8152506103c1565b7f7f9df2342d5c190c7450de83944c941641ce57327a12faebc868644d2853cdbf1892915050565b60005b83518110156103165760008482815181106101b0576101b0610ca1565b6020026020010151602001519050600060028111156101d1576101d1610cb7565b8160028111156101e3576101e3610cb7565b036102315761022c8583815181106101fd576101fd610ca1565b60200260200101516000015186848151811061021b5761021b610ca1565b6020026020010151604001516103f4565b610303565b600181600281111561024557610245610cb7565b0361028e5761022c85838151811061025f5761025f610ca1565b60200260200101516000015186848151811061027d5761027d610ca1565b602002602001015160400151610531565b60028160028111156102a2576102a2610cb7565b036102eb5761022c8583815181106102bc576102bc610ca1565b6020026020010151600001518684815181106102da576102da610ca1565b602002602001015160400151610677565b60405162c5e5d760e31b815260040160405180910390fd5b508061030e81610ce3565b915050610193565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161034a93929190610d4c565b60405180910390a161035c8282610745565b505050565b600061036b61010b565b6005810180546001600160a01b038581166001600160a01b031983168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b600082826040516020016103d6929190610e4c565b60405160208183030381529060405280519060200120905092915050565b60008151116104165760405163092d2fe560e41b815260040160405180910390fd5b600061042061010b565b90506001600160a01b0383166104495760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b038216900361047f5761047f8285610851565b60005b835181101561052a57600084828151811061049f5761049f610ca1565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156104fc5760405163501e70c760e01b81526001600160e01b0319831660048201526024016100a2565b6105088583868a6108a2565b8361051281610e7a565b9450505050808061052290610ce3565b915050610482565b5050505050565b60008151116105535760405163092d2fe560e41b815260040160405180910390fd5b600061055d61010b565b90506001600160a01b0383166105865760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b03821690036105bc576105bc8285610851565b60005b835181101561052a5760008482815181106105dc576105dc610ca1565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03908116908716810361063e57604051631c04188b60e31b81526001600160e01b0319831660048201526024016100a2565b610649858284610942565b6106558583868a6108a2565b8361065f81610e7a565b9450505050808061066f90610ce3565b9150506105bf565b60008151116106995760405163092d2fe560e41b815260040160405180910390fd5b60006106a361010b565b90506001600160a01b038316156106cd57604051631be65fe560e21b815260040160405180910390fd5b60005b825181101561073f5760008382815181106106ed576106ed610ca1565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b031661072a848284610942565b5050808061073790610ce3565b9150506106d0565b50505050565b6001600160a01b038216610777578051156107735760405163c21b1ab760e01b815260040160405180910390fd5b5050565b805160000361079957604051633011e86160e21b815260040160405180910390fd5b6001600160a01b03821630146107b2576107b282610c81565b600080836001600160a01b0316836040516107cd9190610ea0565b600060405180830381855af49150503d8060008114610808576040519150601f19603f3d011682016040523d82523d6000602084013e61080d565b606091505b50915091508161073f57805115610838578060405162461bcd60e51b81526004016100a29190610ebc565b604051633a18f8dd60e01b815260040160405180910390fd5b61085a81610c81565b6003820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b03821661097457604051622902d360e91b81526001600160e01b0319821660048201526024016100a2565b306001600160a01b038316036109a95760405163069731c560e41b81526001600160e01b0319821660048201526024016100a2565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b031692916109f891610ed6565b9050808214610aea576001600160a01b03841660009081526001860160205260408120805483908110610a2d57610a2d610ca1565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610a7e57610a7e610ca1565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610b1357610b13610eef565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319851682528690526040812081905581900361052a576003850154600090610b7690600190610ed6565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610c25576000876003018381548110610bb557610bb5610ca1565b6000918252602090912001546003890180546001600160a01b039092169250829184908110610be657610be6610ca1565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600301805480610c3857610c38610eef565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b803b8061077357604051633c11a9c560e21b815260040160405180910390fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610cf557610cf5610ccd565b5060010190565b60005b83811015610d17578181015183820152602001610cff565b50506000910152565b60008151808452610d38816020860160208601610cfc565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015610e1c57898403607f19018652815180516001600160a01b03168552838101518986019060038110610dbb57634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b80831015610e075783516001600160e01b0319168252928601926001929092019190860190610ddd565b50978501979550505090820190600101610d75565b50506001600160a01b038a16908801528681036040880152610e3e8189610d20565b9a9950505050505050505050565b604081526000610e5f6040830185610d20565b8281036020840152610e718185610d20565b95945050505050565b60006001600160601b03808316818103610e9657610e96610ccd565b6001019392505050565b60008251610eb2818460208701610cfc565b9190910192915050565b602081526000610ecf6020830184610d20565b9392505050565b81810381811115610ee957610ee9610ccd565b92915050565b634e487b7160e01b600052603160045260246000fdfea264697066735822122071b3a412af1f638bcd495ee380440c1080e5121195b203f77562a1e540e9a7d864736f6c63430008120033",
    "sourceMap": "582:2273:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;1824:35;1862:58;:56;:58::i;:::-;1975:13;2025:7;;-1:-1:-1;;;;;;2025:7:0;1991:42;;;;;;;;;:55;:42;;-1:-1:-1;;;;;;1991:55:0;;2056:64;;;;-1:-1:-1;;;2056:64:0;;216:2:34;2056:64:0;;;198:21:34;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;2056:64:0;;;;;;;;;2317:14;2314:1;2311;2298:34;2461:1;2458;2442:14;2439:1;2432:5;2425;2412:51;2533:16;2530:1;2527;2512:38;2637:6;2656:66;;;;2771:16;2768:1;2761:27;2656:66;2691:16;2688:1;2681:27;610:34;;;;;;;;;;-1:-1:-1;610:34:0;;;;-1:-1:-1;;;;;610:34:0;;;;;;-1:-1:-1;;;;;648:32:34;;;630:51;;618:2;603:18;610:34:0;;;;;;;1271:397:19;1356:41;1413:13;1429:107;1458:26;;;;;;;;;;;;;-1:-1:-1;;;1458:26:19;;;1498:28;;;;;;;;;;;;;-1:-1:-1;;;1498:28:19;;;1429:15;:107::i;:::-;456:32;1569:17;;1271:397;-1:-1:-1;;1271:397:19:o;2333:1268:13:-;2502:18;2484:1007;2547:11;:18;2534:10;:31;2484:1007;;;2616:33;2652:11;2664:10;2652:23;;;;;;;;:::i;:::-;;;;;;;:30;;;2616:66;;2710:30;2700:40;;;;;;;;:::i;:::-;:6;:40;;;;;;;;:::i;:::-;;2696:785;;2760:151;2794:11;2806:10;2794:23;;;;;;;;:::i;:::-;;;;;;;:36;;;2852:11;2864:10;2852:23;;;;;;;;:::i;:::-;;;;;;;:41;;;2760:12;:151::i;:::-;2696:785;;;2946:34;2936:6;:44;;;;;;;;:::i;:::-;;2932:549;;3000:155;3038:11;3050:10;3038:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3096:11;3108:10;3096:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3000:16;:155::i;2932:549::-;3190:33;3180:6;:43;;;;;;;;:::i;:::-;;3176:305;;3243:154;3280:11;3292:10;3280:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3338:11;3350:10;3338:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3243:15;:154::i;3176:305::-;3443:23;;-1:-1:-1;;;3443:23:13;;;;;;;;;;;3176:305;-1:-1:-1;2579:12:13;;;;:::i;:::-;;;;2484:1007;;;;3505:41;3516:11;3529:5;3536:9;3505:41;;;;;;;;:::i;:::-;;;;;;;;3556:38;3577:5;3584:9;3556:20;:38::i;:::-;2333:1268;;;:::o;1167:315::-;1228:35;1266:58;:56;:58::i;:::-;1358:17;;;;;-1:-1:-1;;;;;1385:29:13;;;-1:-1:-1;;;;;;1385:29:13;;;;;;;1429:46;;1228:96;;-1:-1:-1;1358:17:13;;;;1429:46;;1334:21;;1429:46;1218:264;;1167:315;:::o;657:216:19:-;781:12;839:11;852;828:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;812:54;;;;;;805:61;;657:216;;;;:::o;3607:1232:13:-;3762:1;3733:18;:25;:30;3729:63;;3772:20;;-1:-1:-1;;;3772:20:13;;;;;;;;;;;3729:63;3802:35;3840:58;:56;:58::i;:::-;3802:96;-1:-1:-1;;;;;;3912:27:13;;3908:55;;3948:15;;-1:-1:-1;;;3948:15:13;;;;;;;;;;;3908:55;-1:-1:-1;;;;;4019:61:13;;3973:23;4019:61;;;:46;;;:61;;;;;:120;;-1:-1:-1;;;;;4217:21:13;;;;4213:83;;4254:31;4263:6;4271:13;4254:8;:31::i;:::-;4323:21;4305:528;4374:18;:25;4358:13;:41;4305:528;;;4453:15;4471:18;4490:13;4471:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;4544:60:13;;4518:23;4544:60;;;;;;;;;;;:90;4471:33;;-1:-1:-1;;;;;;4544:90:13;4652:29;;4648:66;;4690:24;;-1:-1:-1;;;4690:24:13;;-1:-1:-1;;;;;;4401:33:34;;4690:24:13;;;4383:52:34;4356:18;;4690:24:13;4239:202:34;4648:66:13;4728:62;4740:6;4748:8;4758:16;4776:13;4728:11;:62::i;:::-;4804:18;;;;:::i;:::-;;;;4439:394;;4413:15;;;;;:::i;:::-;;;;4305:528;;;;3719:1120;;3607:1232;;:::o;4845:1327::-;5004:1;4975:18;:25;:30;4971:63;;5014:20;;-1:-1:-1;;;5014:20:13;;;;;;;;;;;4971:63;5044:35;5082:58;:56;:58::i;:::-;5044:96;-1:-1:-1;;;;;;5154:27:13;;5150:55;;5190:15;;-1:-1:-1;;;5190:15:13;;;;;;;;;;;5150:55;-1:-1:-1;;;;;5261:61:13;;5215:23;5261:61;;;:46;;;:61;;;;;:120;;-1:-1:-1;;;;;5459:21:13;;;;5455:83;;5496:31;5505:6;5513:13;5496:8;:31::i;:::-;5565:21;5547:619;5616:18;:25;5600:13;:41;5547:619;;;5695:15;5713:18;5732:13;5713:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;5786:60:13;;5760:23;5786:60;;;;;;;;;;;:90;5713:33;;-1:-1:-1;;;;;;5786:90:13;;;;5894:32;;;;5890:94;;5951:33;;-1:-1:-1;;;5951:33:13;;-1:-1:-1;;;;;;4401:33:34;;5951::13;;;4383:52:34;4356:18;;5951:33:13;4239:202:34;5890:94:13;5998:49;6013:6;6021:15;6038:8;5998:14;:49::i;:::-;6061:62;6073:6;6081:8;6091:16;6109:13;6061:11;:62::i;:::-;6137:18;;;;:::i;:::-;;;;5681:485;;5655:15;;;;;:::i;:::-;;;;5547:619;;6178:847;6336:1;6307:18;:25;:30;6303:63;;6346:20;;-1:-1:-1;;;6346:20:13;;;;;;;;;;;6303:63;6376:35;6414:58;:56;:58::i;:::-;6376:96;-1:-1:-1;;;;;;6551:27:13;;;6547:59;;6587:19;;-1:-1:-1;;;6587:19:13;;;;;;;;;;;6547:59;6634:21;6616:403;6685:18;:25;6669:13;:41;6616:403;;;6764:15;6782:18;6801:13;6782:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;6855:60:13;;6829:23;6855:60;;;;;;;;;;;:90;6782:33;;-1:-1:-1;;;;;;6855:90:13;6959:49;6855:6;:90;6782:33;6959:14;:49::i;:::-;6750:269;;6724:15;;;;;:::i;:::-;;;;6616:403;;;;6293:732;6178:847;;:::o;10464:736::-;-1:-1:-1;;;;;10578:19:13;;10574:620;;10617:16;;:20;10613:51;;10646:18;;-1:-1:-1;;;10646:18:13;;;;;;;;;;;10613:51;10464:736;;:::o;10574:620::-;10699:9;:16;10719:1;10699:21;10695:49;;10729:15;;-1:-1:-1;;;10729:15:13;;;;;;;;;;;10695:49;-1:-1:-1;;;;;10762:22:13;;10779:4;10762:22;10758:90;;10804:29;10827:5;10804:22;:29::i;:::-;10862:12;10876:18;10898:5;-1:-1:-1;;;;;10898:18:13;10917:9;10898:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10861:66;;;;10946:7;10941:243;;10977:12;;:16;10973:197;;11074:5;11060:21;;-1:-1:-1;;;11060:21:13;;;;;;;;:::i;10973:197::-;11135:16;;-1:-1:-1;;;11135:16:13;;;;;;;;;;;7031:346;7150:37;7173:13;7150:22;:37::i;:::-;7291:21;;;:28;;-1:-1:-1;;;;;7197:57:13;;;;;;;:42;;;;:57;;;;;;;:91;;:122;;;7329:41;;;;;;;;;;;;;;-1:-1:-1;;;;;;7329:41:13;;;;;;7031:346::o;7383:523::-;-1:-1:-1;;;;;;7565:57:13;;:46;:57;;;;;;;;;;;:115;;-1:-1:-1;;;;;7565:115:13;;;-1:-1:-1;;;7565:115:13;-1:-1:-1;;;;;7565:115:13;;;;;;7690:44;;;;;;;-1:-1:-1;7690:29:13;;;:44;;;;;:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7565:115;7690:100;;;;;;;;;;;;;;;;;;;7800:57;;;;;:99;;-1:-1:-1;;;;;;7800:99:13;;;;7383:523::o;7912:2546::-;-1:-1:-1;;;;;8067:27:13;;8063:70;;8103:30;;-1:-1:-1;;;8103:30:13;;-1:-1:-1;;;;;;4401:33:34;;8103:30:13;;;4383:52:34;4356:18;;8103:30:13;4239:202:34;8063:70:13;8249:4;-1:-1:-1;;;;;8224:30:13;;;8220:71;;8263:28;;-1:-1:-1;;;8263:28:13;;-1:-1:-1;;;;;;4401:33:34;;8263:28:13;;;4383:52:34;4356:18;;8263:28:13;4239:202:34;8220:71:13;-1:-1:-1;;;;;;8402:57:13;;8375:24;8402:57;;;;;;;;;;;:95;-1:-1:-1;;;;;8538:57:13;;;;8649:1;8538:42;;;:57;;;;;;:108;-1:-1:-1;;;8402:95:13;;;-1:-1:-1;;;;;8402:95:13;;8375:24;8538:112;;;:::i;:::-;8507:143;;8752:20;8732:16;:40;8728:497;;-1:-1:-1;;;;;8810:61:13;;8788:19;8810:61;;;:46;;;:61;;;;;:118;;8907:20;;8810:118;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;8942:44:13;;;;:29;;;:44;;;;;;;:110;;8810:118;;;;;;;;;;;;;;-1:-1:-1;8810:118:13;;8942:44;9022:16;;8942:110;;;;;;:::i;:::-;;;;;;;;;;;;;:125;;;:110;;;;;;:125;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9081:64:13;;;;;;;;;;;;:133;;-1:-1:-1;;;;;9081:133:13;-1:-1:-1;;;;;;;;9081:133:13;;;;;;8728:497;-1:-1:-1;;;;;9270:44:13;;;;;;:29;;;:44;;;;;:68;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;9270:68:13;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9355:44:13;;;;;;;;;;9348:51;;;9494:25;;;9490:962;;9661:21;;;:28;9626:32;;9661;;9692:1;;9661:32;:::i;:::-;-1:-1:-1;;;;;9738:61:13;;9707:28;9738:61;;;:46;;;;:61;;;;;;:99;;9626:67;;-1:-1:-1;9855:48:13;;;9851:430;;9923:24;9950:6;:21;;9993:24;9950:85;;;;;;;;:::i;:::-;;;;;;;;;;;10053:21;;;:43;;-1:-1:-1;;;;;9950:85:13;;;;-1:-1:-1;9950:85:13;;10075:20;;10053:43;;;;;;:::i;:::-;;;;;;;;;;;;;:62;;-1:-1:-1;;;;;;10053:62:13;-1:-1:-1;;;;;10053:62:13;;;;;;10133:68;;;;;;-1:-1:-1;10133:50:13;;;:68;;;;;;:110;:133;;;9851:430;10294:6;:21;;:27;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;10294:27:13;;;;;-1:-1:-1;;;;;;10294:27:13;;;;;;;;;-1:-1:-1;;;;;10342:61:13;;;;10294:27;10342:46;;;:61;;;;;;:99;10335:106;-1:-1:-1;;8053:2405:13;;7912:2546;;;:::o;11206:230::-;11350:22;;11395:17;11391:38;;11421:8;;-1:-1:-1;;;11421:8:13;;;;;;;;;;;692:127:34;753:10;748:3;744:20;741:1;734:31;784:4;781:1;774:15;808:4;805:1;798:15;824:127;885:10;880:3;876:20;873:1;866:31;916:4;913:1;906:15;940:4;937:1;930:15;956:127;1017:10;1012:3;1008:20;1005:1;998:31;1048:4;1045:1;1038:15;1072:4;1069:1;1062:15;1088:135;1127:3;1148:17;;;1145:43;;1168:18;;:::i;:::-;-1:-1:-1;1215:1:34;1204:13;;1088:135::o;1228:250::-;1313:1;1323:113;1337:6;1334:1;1331:13;1323:113;;;1413:11;;;1407:18;1394:11;;;1387:39;1359:2;1352:10;1323:113;;;-1:-1:-1;;1470:1:34;1452:16;;1445:27;1228:250::o;1483:270::-;1524:3;1562:5;1556:12;1589:6;1584:3;1577:19;1605:76;1674:6;1667:4;1662:3;1658:14;1651:4;1644:5;1640:16;1605:76;:::i;:::-;1735:2;1714:15;-1:-1:-1;;1710:29:34;1701:39;;;;1742:4;1697:50;;1483:270;-1:-1:-1;;1483:270:34:o;1758:2090::-;2026:4;2055:2;2095;2084:9;2080:18;2125:2;2114:9;2107:21;2148:6;2183;2177:13;2214:6;2206;2199:22;2240:3;2230:13;;2274:2;2263:9;2259:18;2252:25;;2336:2;2326:6;2323:1;2319:14;2308:9;2304:30;2300:39;2358:4;2397:2;2389:6;2385:15;2418:1;2428:1249;2442:6;2439:1;2436:13;2428:1249;;;2507:22;;;-1:-1:-1;;2503:37:34;2491:50;;2564:13;;2651:9;;-1:-1:-1;;;;;2647:35:34;2632:51;;2722:11;;;2716:18;2604:15;;;;2774:1;2757:19;;2747:170;;2827:10;2822:3;2818:20;2815:1;2808:31;2866:4;2863:1;2856:15;2898:4;2895:1;2888:15;2747:170;2937:15;;;2930:37;2990:4;3035:11;;;3029:18;3067:15;;;3060:27;;;3148:21;;3182:24;;;;3272:23;;;;-1:-1:-1;;3228:15:34;;;;3333:236;3349:8;3344:3;3341:17;3333:236;;;3430:15;;-1:-1:-1;;;;;;3426:42:34;3412:57;;3538:17;;;;3377:1;3368:11;;;;;3495:14;;;;3333:236;;;-1:-1:-1;3655:12:34;;;;3592:5;-1:-1:-1;;;3620:15:34;;;;2464:1;2457:9;2428:1249;;;-1:-1:-1;;;;;;;441:31:34;;3713:18;;;429:44;3770:22;;;3763:4;3748:20;;3741:52;3810:32;3774:6;3827;3810:32;:::i;:::-;3802:40;1758:2090;-1:-1:-1;;;;;;;;;;1758:2090:34:o;3853:381::-;4050:2;4039:9;4032:21;4013:4;4076:44;4116:2;4105:9;4101:18;4093:6;4076:44;:::i;:::-;4168:9;4160:6;4156:22;4151:2;4140:9;4136:18;4129:50;4196:32;4221:6;4213;4196:32;:::i;:::-;4188:40;3853:381;-1:-1:-1;;;;;3853:381:34:o;4446:217::-;4484:3;-1:-1:-1;;;;;4573:2:34;4566:5;4562:14;4600:2;4591:7;4588:15;4585:41;;4606:18;;:::i;:::-;4655:1;4642:15;;4446:217;-1:-1:-1;;;4446:217:34:o;4668:287::-;4797:3;4835:6;4829:13;4851:66;4910:6;4905:3;4898:4;4890:6;4886:17;4851:66;:::i;:::-;4933:16;;;;;4668:287;-1:-1:-1;;4668:287:34:o;4960:219::-;5109:2;5098:9;5091:21;5072:4;5129:44;5169:2;5158:9;5154:18;5146:6;5129:44;:::i;:::-;5121:52;4960:219;-1:-1:-1;;;4960:219:34:o;5184:128::-;5251:9;;;5272:11;;;5269:37;;;5286:18;;:::i;:::-;5184:128;;;;:::o;5317:127::-;5378:10;5373:3;5369:20;5366:1;5359:31;5409:4;5406:1;5399:15;5433:4;5430:1;5423:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "vaultFactoryDiamond()": "66bd442d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_selectorModule\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_tokenModule\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_vaultOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_backupAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pingWindow\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vaultID\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EmptyCalldata\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"ImmutableFunction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InValidFacetCutAction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustBeZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSelectorsInFacet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonEmptyCalldata\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"NonExistentSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"SameSelectorReplacement\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"SelectorExists\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"vaultFactoryDiamond\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vault/VaultDiamond.sol\":\"VaultDiamond\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate.git/=lib/solmate/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/Vault/VaultDiamond.sol\":{\"keccak256\":\"0x7297fe20ac5eb2e2c56a71ad559f641d5f5a9d19352d7b863df12aa7d0ea91b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1e9f9c96186c6d80540c94b394b21df806a9981340e758225d3ad73d84941a7\",\"dweb:/ipfs/QmcqFqnGPf3wfwNr6quysMhWxcFtWVYvkvMQxiCjGz6Rep\"]},\"contracts/Vault/facets/DMSFacet.sol\":{\"keccak256\":\"0xb44ea07e5553349f60acdd5ea03dce4cf6a9be22729c14b46d057efcffd571fe\",\"urls\":[\"bzz-raw://d976da95df20f10fd1e5d3d7ce015c468651e98a1ee638910ea76e8a84de848c\",\"dweb:/ipfs/QmW8UR6KTfFVKxMaawPAbi5hrLoGmLxnbGjn9Qds3DwFeG\"]},\"contracts/Vault/facets/DiamondCutFacet.sol\":{\"keccak256\":\"0x79c5db6de534885727f3d49c2a9019fa61c7bffc29c6739cd2e8ddb4269792b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd074d381e2459c4abec48083c668c6ddeceee1aaa2be58710cce8a47722abf1\",\"dweb:/ipfs/QmXapbYiQ1A52435rHny25ncCLHpvjniyj6H9JMBixqQNT\"]},\"contracts/Vault/facets/DiamondLoupeFacet.sol\":{\"keccak256\":\"0x72e14d9679728761fcbc49770ea8426d30cd930a4bc100eb31d654fa724f180b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40574e2044dd1e632acbc8767553c461307065bb0a0533beff44678625dcb82e\",\"dweb:/ipfs/QmVTXZWhH8bDnFBUDHgubQgt1ZTk1swjoDxVwvyY9ta2ER\"]},\"contracts/Vault/facets/ERC1155Facet.sol\":{\"keccak256\":\"0x0693ac0c317e55ca4ecfb2d212dc29651e177414e67528e7a09a6d48dd4e4d30\",\"urls\":[\"bzz-raw://ad662cb22719df6e73e0f550834f2bd47d9ade8aeb439dde0d4016efbcc17c09\",\"dweb:/ipfs/QmW2CRN2MmQ9vCLztf2tPXU4WSxT6a3uWDse8nBePaQPh7\"]},\"contracts/Vault/facets/ERC20Facet.sol\":{\"keccak256\":\"0xf07dcbef6dcd0197e517b6139f1043790020c214c903e15302c466defa4a0515\",\"urls\":[\"bzz-raw://87632593bcf4d34f4ededf97768267eced2573750000812c0958968407637bda\",\"dweb:/ipfs/QmbVNyceunrVUoJNkowby1jFeuSfddJNGXkNiPceUFee9X\"]},\"contracts/Vault/facets/ERC721Facet.sol\":{\"keccak256\":\"0x2e51b529516b73471aeb2fa53f226105c68bff08138b6e21fdd7c1b8c4d2dfe3\",\"urls\":[\"bzz-raw://b19063b6422dcfbc2a64a93ebff9ed7b61d4a502197134655ae50b60052544e2\",\"dweb:/ipfs/QmWwcU8C1wrCYGE3pRTRFm4qqppZzeHUxzuDTBAxZCFNka\"]},\"contracts/Vault/libraries/LibArrayHelpers.sol\":{\"keccak256\":\"0xbb3704596a7c0a54408803292f7825f8b5d3537f1c67be87705728cf5185350c\",\"urls\":[\"bzz-raw://26a7e1ca2913abdf1db51e3fc9836a256bd53c9aa50c8d275fc66b843f0ee6c0\",\"dweb:/ipfs/QmQXR6SWnp4PFUc9TsW3AeoU7jgGu7DGB3RXzrKXvMpfef\"]},\"contracts/Vault/libraries/LibCore.sol\":{\"keccak256\":\"0x396b9c1526ff054ba263845011172164b235245690c225999536eddba2a1c271\",\"urls\":[\"bzz-raw://44614712391c9a0bc34d6653675096c0ba61ba69e62191de0b1a43289ea0a8d0\",\"dweb:/ipfs/QmdyBLL2dJWrr6dubYKKd4hJWRWDgosA8Wm6GUH7rYcX9C\"]},\"contracts/Vault/libraries/LibDMS.sol\":{\"keccak256\":\"0x9e21877024ffd55f516a2d8ad52a5f2dab3df7558c872352e23ad9b72729fcf8\",\"urls\":[\"bzz-raw://d4d255321249aae710372f33e6f20a182993b1be8c88dccf1b846cfa72516fee\",\"dweb:/ipfs/QmYgZtUoksTZrd2W1uxQgxCBw1YgSHux7ZWiYbUZvcSq7H\"]},\"contracts/Vault/libraries/LibDMSGuards.sol\":{\"keccak256\":\"0xe91f90f44329aab91d115930409f9f5ae2653da192bc29e4ee5f0c9ec5bf62b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2b443a6fb304d2e345f5ae958002c88ea6786fd6061f89256e204ce35e4b0d6\",\"dweb:/ipfs/QmQ74oqMHXefJHm3zYiWb2DkVwowacnqVoc3Ti98bNmLLd\"]},\"contracts/Vault/libraries/LibDiamond.sol\":{\"keccak256\":\"0x2ab3387cb04071539c1c38068f277df334909a8f9199ba27e8053d8922402f32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://164e4dd5c00b31f0df64529bb69038b7ebafe309f86afed2302ddff65fe9dcda\",\"dweb:/ipfs/QmSUB8w9cZ6osr9NAUEtT7hT2ukXHkQ9LgcnnGC52WW65i\"]},\"contracts/Vault/libraries/LibErrors.sol\":{\"keccak256\":\"0xce4b3cdf58fe745cc23fd3acbb93d388d25343450f15c8bb482b6ef5527339e9\",\"urls\":[\"bzz-raw://da53ef58e1a9f6ff1b32a82c76a5a34e76af6c2a3cb74e50018c539b411967f4\",\"dweb:/ipfs/QmVYGVvW5oBvk6W3Xysr8MoupewJtP3EKwDWpWG9WNjw8v\"]},\"contracts/Vault/libraries/LibGuards.sol\":{\"keccak256\":\"0xf52aacbe49d7f2b29544b5dd8a35b655b59610328749090a48b431b62975febc\",\"urls\":[\"bzz-raw://a2263aea89b52e043b6420d912209c21c6cca5e30e743e529fe666e278faabcb\",\"dweb:/ipfs/QmX4xifn2npbojrmQbbtWoqezzuS62nErpndovFEV6BHXe\"]},\"contracts/Vault/libraries/LibLayoutSilo.sol\":{\"keccak256\":\"0xad5bf2fd20542e2ec80963adefd3b3163012c65676c3f1c5ece04ba166216a32\",\"urls\":[\"bzz-raw://71d13de6e8c68c2ab89a8ea91a5a7c5c89d42db40453123307e3c13d6601ed3e\",\"dweb:/ipfs/QmTaT8meM43jzLavynfaajrtZvG1fzZmuxvaTw6qHDWqkU\"]},\"contracts/Vault/libraries/LibModuleManager.sol\":{\"keccak256\":\"0x45ba44605d923a37a5b70b614172e201c0f9d28e58f4c557cdcc04bc0317f20e\",\"urls\":[\"bzz-raw://5684e4b22392e44c8731109c54fd860a78b089dfa9fd516402d162c322efaa6d\",\"dweb:/ipfs/QmSumUwfERNwZht89MZCZzAdmhJjX2tu9y67iNw1XMZsPd\"]},\"contracts/Vault/libraries/LibStorageBinder.sol\":{\"keccak256\":\"0xa7a817c811e8d38ba1a54d5e5822c9259dd3df152b39fd749fd65dead54e110e\",\"urls\":[\"bzz-raw://188731abe47fe3aadb47974c02346465ed12e61147e97b86190caf903a8d53e3\",\"dweb:/ipfs/QmScDn6v668MgC1XxvLYLfrZW6rt1rAdTWq2v1XPHqdKbq\"]},\"contracts/Vault/libraries/LibTokens.sol\":{\"keccak256\":\"0x780c7cf2463b846806b9d3fe0cf13ea0d6077858e054f31468b116dfa4b8c22a\",\"urls\":[\"bzz-raw://a8d48898890e1ac8ce19e62e3fdcb596a97599b4b4755da613664882fdd583e9\",\"dweb:/ipfs/QmYrbvVAqWzxTubmznp2ahJ3Z2vWPr2FLptQzbkwHLvP8x\"]},\"contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x508f2149e7f4d3370c6895d2c22de478a1cd910a2c1a25511124cee1d83fbcbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09dc710bcff2690c53aae1459aac8cdfad95db45b3bf748f837cb856c5872765\",\"dweb:/ipfs/QmZNfaa9sMNC4iM1gqhJWZzKiE8nQ3wuE6NJMAxZWYK771\"]},\"contracts/interfaces/IDiamondLoupe.sol\":{\"keccak256\":\"0xac7e82142cf9e2eb13ba80ba52aa950e4b73aebaec78cbd747ec1b4598b01c08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40d8edd4ef84f1cea2dbd614208f29982acd1731e93b045a3651e146fccb581e\",\"dweb:/ipfs/QmPcJ67WHWkVTNGubhFyEvBFxWLBCP3QvzwSzZgvZAQYA2\"]},\"contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0xd98d62a7cfec5b7bb199e6b11dda1427f68d97c1e890226846e444c5fdd705ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eda955f978dc917e6d719bde0d70c4e63dd73c9dd88fcebbf65b4cb75611117e\",\"dweb:/ipfs/Qmf9ohhubgRVGpudeE7XUxjBhG25MAnLmFa1qjxnHYpZQm\"]},\"contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x90ee0607a08a2d6e21132dc60810936cc5cd65b077d59f02dfb42c6b8be52b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0038bb2c3e17abc99cbd60166a8aac884b313a6ad929ebcfb4f6770cd5f02ffe\",\"dweb:/ipfs/QmZYsuSrQu5P4RX1yS6YT2r7VTaAPaWkQb58bpfAt4Ya9r\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xcfbfd19eb6ef183ce50be075607af71e64f9a5ca27c02a85cbfff879bfc737dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d48f27073c98b5642ed46b44a248ecb898129ee9643721603d73840a09ce1788\",\"dweb:/ipfs/Qma8Nj2vE62mjXfqBdLHTNCSGDz4XYceVLoCxjSWrz6wfP\"]},\"contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0x6eb3c263c07f182d27d3b60990e5411bb8367c8b72d951245191c8f26db91931\",\"urls\":[\"bzz-raw://6faa1b8e94fcb85bd342176447948a98b6dec378f893b6273e74e49d778440de\",\"dweb:/ipfs/QmRvDKdZkPdLkrjh6qayWj9vPkbf4fo4nPKnQ7CYjoQRd3\"]},\"contracts/interfaces/IModuleData.sol\":{\"keccak256\":\"0xec628a7c4a83b6f40ec387f46363c951a85eb35ba35585e5beb237543d2c1bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5799c5f69ed69cb660603a2967eabab1df2fd338b8183f1a634a0edbc92ffeda\",\"dweb:/ipfs/QmYi2N9LAJTtbR2pC5xu9LYjBWcpLCS32dHTKek5wpKUGQ\"]},\"contracts/interfaces/IVaultDiamond.sol\":{\"keccak256\":\"0x96c5822a12384688c23f3287f99691afa3b8247e6d44a384cb636d70b928d9f6\",\"urls\":[\"bzz-raw://32335b88fa1bd7f612217ce752ff8c4dc63734a27cfd8d6d5f9c0de5f44306d7\",\"dweb:/ipfs/QmdgpPL3Z8VMJtMBk129PgLfyDoeC6cmUo3V7PiNQbJMjj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_selectorModule",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ]
            },
            {
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_tokenModule",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "_vaultOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_backupAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_pingWindow",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_vaultID",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptyCalldata"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "ImmutableFunction"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InValidFacetCutAction"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InitCallFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MustBeZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoCode"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoSelectorsInFacet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonEmptyCalldata"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "NonExistentSelector"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "SameSelectorReplacement"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "SelectorExists"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultFactoryDiamond",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/solmate/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":solmate.git/=lib/solmate/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Vault/VaultDiamond.sol": "VaultDiamond"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Vault/VaultDiamond.sol": {
        "keccak256": "0x7297fe20ac5eb2e2c56a71ad559f641d5f5a9d19352d7b863df12aa7d0ea91b0",
        "urls": [
          "bzz-raw://f1e9f9c96186c6d80540c94b394b21df806a9981340e758225d3ad73d84941a7",
          "dweb:/ipfs/QmcqFqnGPf3wfwNr6quysMhWxcFtWVYvkvMQxiCjGz6Rep"
        ],
        "license": "MIT"
      },
      "contracts/Vault/facets/DMSFacet.sol": {
        "keccak256": "0xb44ea07e5553349f60acdd5ea03dce4cf6a9be22729c14b46d057efcffd571fe",
        "urls": [
          "bzz-raw://d976da95df20f10fd1e5d3d7ce015c468651e98a1ee638910ea76e8a84de848c",
          "dweb:/ipfs/QmW8UR6KTfFVKxMaawPAbi5hrLoGmLxnbGjn9Qds3DwFeG"
        ],
        "license": null
      },
      "contracts/Vault/facets/DiamondCutFacet.sol": {
        "keccak256": "0x79c5db6de534885727f3d49c2a9019fa61c7bffc29c6739cd2e8ddb4269792b0",
        "urls": [
          "bzz-raw://bd074d381e2459c4abec48083c668c6ddeceee1aaa2be58710cce8a47722abf1",
          "dweb:/ipfs/QmXapbYiQ1A52435rHny25ncCLHpvjniyj6H9JMBixqQNT"
        ],
        "license": "MIT"
      },
      "contracts/Vault/facets/DiamondLoupeFacet.sol": {
        "keccak256": "0x72e14d9679728761fcbc49770ea8426d30cd930a4bc100eb31d654fa724f180b",
        "urls": [
          "bzz-raw://40574e2044dd1e632acbc8767553c461307065bb0a0533beff44678625dcb82e",
          "dweb:/ipfs/QmVTXZWhH8bDnFBUDHgubQgt1ZTk1swjoDxVwvyY9ta2ER"
        ],
        "license": "MIT"
      },
      "contracts/Vault/facets/ERC1155Facet.sol": {
        "keccak256": "0x0693ac0c317e55ca4ecfb2d212dc29651e177414e67528e7a09a6d48dd4e4d30",
        "urls": [
          "bzz-raw://ad662cb22719df6e73e0f550834f2bd47d9ade8aeb439dde0d4016efbcc17c09",
          "dweb:/ipfs/QmW2CRN2MmQ9vCLztf2tPXU4WSxT6a3uWDse8nBePaQPh7"
        ],
        "license": null
      },
      "contracts/Vault/facets/ERC20Facet.sol": {
        "keccak256": "0xf07dcbef6dcd0197e517b6139f1043790020c214c903e15302c466defa4a0515",
        "urls": [
          "bzz-raw://87632593bcf4d34f4ededf97768267eced2573750000812c0958968407637bda",
          "dweb:/ipfs/QmbVNyceunrVUoJNkowby1jFeuSfddJNGXkNiPceUFee9X"
        ],
        "license": null
      },
      "contracts/Vault/facets/ERC721Facet.sol": {
        "keccak256": "0x2e51b529516b73471aeb2fa53f226105c68bff08138b6e21fdd7c1b8c4d2dfe3",
        "urls": [
          "bzz-raw://b19063b6422dcfbc2a64a93ebff9ed7b61d4a502197134655ae50b60052544e2",
          "dweb:/ipfs/QmWwcU8C1wrCYGE3pRTRFm4qqppZzeHUxzuDTBAxZCFNka"
        ],
        "license": null
      },
      "contracts/Vault/libraries/LibArrayHelpers.sol": {
        "keccak256": "0xbb3704596a7c0a54408803292f7825f8b5d3537f1c67be87705728cf5185350c",
        "urls": [
          "bzz-raw://26a7e1ca2913abdf1db51e3fc9836a256bd53c9aa50c8d275fc66b843f0ee6c0",
          "dweb:/ipfs/QmQXR6SWnp4PFUc9TsW3AeoU7jgGu7DGB3RXzrKXvMpfef"
        ],
        "license": null
      },
      "contracts/Vault/libraries/LibCore.sol": {
        "keccak256": "0x396b9c1526ff054ba263845011172164b235245690c225999536eddba2a1c271",
        "urls": [
          "bzz-raw://44614712391c9a0bc34d6653675096c0ba61ba69e62191de0b1a43289ea0a8d0",
          "dweb:/ipfs/QmdyBLL2dJWrr6dubYKKd4hJWRWDgosA8Wm6GUH7rYcX9C"
        ],
        "license": null
      },
      "contracts/Vault/libraries/LibDMS.sol": {
        "keccak256": "0x9e21877024ffd55f516a2d8ad52a5f2dab3df7558c872352e23ad9b72729fcf8",
        "urls": [
          "bzz-raw://d4d255321249aae710372f33e6f20a182993b1be8c88dccf1b846cfa72516fee",
          "dweb:/ipfs/QmYgZtUoksTZrd2W1uxQgxCBw1YgSHux7ZWiYbUZvcSq7H"
        ],
        "license": null
      },
      "contracts/Vault/libraries/LibDMSGuards.sol": {
        "keccak256": "0xe91f90f44329aab91d115930409f9f5ae2653da192bc29e4ee5f0c9ec5bf62b7",
        "urls": [
          "bzz-raw://e2b443a6fb304d2e345f5ae958002c88ea6786fd6061f89256e204ce35e4b0d6",
          "dweb:/ipfs/QmQ74oqMHXefJHm3zYiWb2DkVwowacnqVoc3Ti98bNmLLd"
        ],
        "license": "MIT"
      },
      "contracts/Vault/libraries/LibDiamond.sol": {
        "keccak256": "0x2ab3387cb04071539c1c38068f277df334909a8f9199ba27e8053d8922402f32",
        "urls": [
          "bzz-raw://164e4dd5c00b31f0df64529bb69038b7ebafe309f86afed2302ddff65fe9dcda",
          "dweb:/ipfs/QmSUB8w9cZ6osr9NAUEtT7hT2ukXHkQ9LgcnnGC52WW65i"
        ],
        "license": "MIT"
      },
      "contracts/Vault/libraries/LibErrors.sol": {
        "keccak256": "0xce4b3cdf58fe745cc23fd3acbb93d388d25343450f15c8bb482b6ef5527339e9",
        "urls": [
          "bzz-raw://da53ef58e1a9f6ff1b32a82c76a5a34e76af6c2a3cb74e50018c539b411967f4",
          "dweb:/ipfs/QmVYGVvW5oBvk6W3Xysr8MoupewJtP3EKwDWpWG9WNjw8v"
        ],
        "license": null
      },
      "contracts/Vault/libraries/LibGuards.sol": {
        "keccak256": "0xf52aacbe49d7f2b29544b5dd8a35b655b59610328749090a48b431b62975febc",
        "urls": [
          "bzz-raw://a2263aea89b52e043b6420d912209c21c6cca5e30e743e529fe666e278faabcb",
          "dweb:/ipfs/QmX4xifn2npbojrmQbbtWoqezzuS62nErpndovFEV6BHXe"
        ],
        "license": null
      },
      "contracts/Vault/libraries/LibLayoutSilo.sol": {
        "keccak256": "0xad5bf2fd20542e2ec80963adefd3b3163012c65676c3f1c5ece04ba166216a32",
        "urls": [
          "bzz-raw://71d13de6e8c68c2ab89a8ea91a5a7c5c89d42db40453123307e3c13d6601ed3e",
          "dweb:/ipfs/QmTaT8meM43jzLavynfaajrtZvG1fzZmuxvaTw6qHDWqkU"
        ],
        "license": null
      },
      "contracts/Vault/libraries/LibModuleManager.sol": {
        "keccak256": "0x45ba44605d923a37a5b70b614172e201c0f9d28e58f4c557cdcc04bc0317f20e",
        "urls": [
          "bzz-raw://5684e4b22392e44c8731109c54fd860a78b089dfa9fd516402d162c322efaa6d",
          "dweb:/ipfs/QmSumUwfERNwZht89MZCZzAdmhJjX2tu9y67iNw1XMZsPd"
        ],
        "license": null
      },
      "contracts/Vault/libraries/LibStorageBinder.sol": {
        "keccak256": "0xa7a817c811e8d38ba1a54d5e5822c9259dd3df152b39fd749fd65dead54e110e",
        "urls": [
          "bzz-raw://188731abe47fe3aadb47974c02346465ed12e61147e97b86190caf903a8d53e3",
          "dweb:/ipfs/QmScDn6v668MgC1XxvLYLfrZW6rt1rAdTWq2v1XPHqdKbq"
        ],
        "license": null
      },
      "contracts/Vault/libraries/LibTokens.sol": {
        "keccak256": "0x780c7cf2463b846806b9d3fe0cf13ea0d6077858e054f31468b116dfa4b8c22a",
        "urls": [
          "bzz-raw://a8d48898890e1ac8ce19e62e3fdcb596a97599b4b4755da613664882fdd583e9",
          "dweb:/ipfs/QmYrbvVAqWzxTubmznp2ahJ3Z2vWPr2FLptQzbkwHLvP8x"
        ],
        "license": null
      },
      "contracts/interfaces/IDiamondCut.sol": {
        "keccak256": "0x508f2149e7f4d3370c6895d2c22de478a1cd910a2c1a25511124cee1d83fbcbf",
        "urls": [
          "bzz-raw://09dc710bcff2690c53aae1459aac8cdfad95db45b3bf748f837cb856c5872765",
          "dweb:/ipfs/QmZNfaa9sMNC4iM1gqhJWZzKiE8nQ3wuE6NJMAxZWYK771"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDiamondLoupe.sol": {
        "keccak256": "0xac7e82142cf9e2eb13ba80ba52aa950e4b73aebaec78cbd747ec1b4598b01c08",
        "urls": [
          "bzz-raw://40d8edd4ef84f1cea2dbd614208f29982acd1731e93b045a3651e146fccb581e",
          "dweb:/ipfs/QmPcJ67WHWkVTNGubhFyEvBFxWLBCP3QvzwSzZgvZAQYA2"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC1155.sol": {
        "keccak256": "0xd98d62a7cfec5b7bb199e6b11dda1427f68d97c1e890226846e444c5fdd705ba",
        "urls": [
          "bzz-raw://eda955f978dc917e6d719bde0d70c4e63dd73c9dd88fcebbf65b4cb75611117e",
          "dweb:/ipfs/Qmf9ohhubgRVGpudeE7XUxjBhG25MAnLmFa1qjxnHYpZQm"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC165.sol": {
        "keccak256": "0x90ee0607a08a2d6e21132dc60810936cc5cd65b077d59f02dfb42c6b8be52b2c",
        "urls": [
          "bzz-raw://0038bb2c3e17abc99cbd60166a8aac884b313a6ad929ebcfb4f6770cd5f02ffe",
          "dweb:/ipfs/QmZYsuSrQu5P4RX1yS6YT2r7VTaAPaWkQb58bpfAt4Ya9r"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC20.sol": {
        "keccak256": "0xcfbfd19eb6ef183ce50be075607af71e64f9a5ca27c02a85cbfff879bfc737dc",
        "urls": [
          "bzz-raw://d48f27073c98b5642ed46b44a248ecb898129ee9643721603d73840a09ce1788",
          "dweb:/ipfs/Qma8Nj2vE62mjXfqBdLHTNCSGDz4XYceVLoCxjSWrz6wfP"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC721.sol": {
        "keccak256": "0x6eb3c263c07f182d27d3b60990e5411bb8367c8b72d951245191c8f26db91931",
        "urls": [
          "bzz-raw://6faa1b8e94fcb85bd342176447948a98b6dec378f893b6273e74e49d778440de",
          "dweb:/ipfs/QmRvDKdZkPdLkrjh6qayWj9vPkbf4fo4nPKnQ7CYjoQRd3"
        ],
        "license": null
      },
      "contracts/interfaces/IModuleData.sol": {
        "keccak256": "0xec628a7c4a83b6f40ec387f46363c951a85eb35ba35585e5beb237543d2c1bcb",
        "urls": [
          "bzz-raw://5799c5f69ed69cb660603a2967eabab1df2fd338b8183f1a634a0edbc92ffeda",
          "dweb:/ipfs/QmYi2N9LAJTtbR2pC5xu9LYjBWcpLCS32dHTKek5wpKUGQ"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IVaultDiamond.sol": {
        "keccak256": "0x96c5822a12384688c23f3287f99691afa3b8247e6d44a384cb636d70b928d9f6",
        "urls": [
          "bzz-raw://32335b88fa1bd7f612217ce752ff8c4dc63734a27cfd8d6d5f9c0de5f44306d7",
          "dweb:/ipfs/QmdgpPL3Z8VMJtMBk129PgLfyDoeC6cmUo3V7PiNQbJMjj"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Vault/VaultDiamond.sol",
    "id": 174,
    "exportedSymbols": {
      "DMSData": [
        6286
      ],
      "FacetAndSelectorData": [
        6204
      ],
      "IDiamondCut": [
        8663
      ],
      "IModuleData": [
        9042
      ],
      "IVaultDiamond": [
        9056
      ],
      "LibDiamond": [
        5948
      ],
      "LibErrors": [
        5959
      ],
      "LibStorageBinder": [
        6426
      ],
      "VaultDiamond": [
        173
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2824:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "32:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "180:54:0",
        "nodes": [],
        "absolutePath": "contracts/Vault/libraries/LibDiamond.sol",
        "file": "./libraries/LibDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 174,
        "sourceUnit": 5949,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "LibDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5948,
              "src": "188:10:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "235:58:0",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDiamondCut.sol",
        "file": "../interfaces/IDiamondCut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 174,
        "sourceUnit": 8664,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "IDiamondCut",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8663,
              "src": "243:11:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 8,
        "nodeType": "ImportDirective",
        "src": "295:76:0",
        "nodes": [],
        "absolutePath": "contracts/Vault/libraries/LibLayoutSilo.sol",
        "file": "./libraries/LibLayoutSilo.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 174,
        "sourceUnit": 6287,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "FacetAndSelectorData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6204,
              "src": "303:20:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 7,
              "name": "DMSData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6286,
              "src": "325:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 10,
        "nodeType": "ImportDirective",
        "src": "373:66:0",
        "nodes": [],
        "absolutePath": "contracts/Vault/libraries/LibStorageBinder.sol",
        "file": "./libraries/LibStorageBinder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 174,
        "sourceUnit": 6427,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9,
              "name": "LibStorageBinder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6426,
              "src": "381:16:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12,
        "nodeType": "ImportDirective",
        "src": "440:52:0",
        "nodes": [],
        "absolutePath": "contracts/Vault/libraries/LibErrors.sol",
        "file": "./libraries/LibErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 174,
        "sourceUnit": 5960,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11,
              "name": "LibErrors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5959,
              "src": "448:9:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 13,
        "nodeType": "ImportDirective",
        "src": "539:41:0",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IVaultDiamond.sol",
        "file": "../interfaces/IVaultDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 174,
        "sourceUnit": 9057,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 173,
        "nodeType": "ContractDefinition",
        "src": "582:2273:0",
        "nodes": [
          {
            "id": 15,
            "nodeType": "VariableDeclaration",
            "src": "610:34:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "66bd442d",
            "mutability": "mutable",
            "name": "vaultFactoryDiamond",
            "nameLocation": "625:19:0",
            "scope": 173,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 14,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "610:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 137,
            "nodeType": "FunctionDefinition",
            "src": "651:1008:0",
            "nodes": [],
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "900:759:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37,
                        "name": "_selectorModule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "932:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$8640_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 40,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "957:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "949:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 38,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "949:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "949:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "961:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$8640_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 34,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5948,
                        "src": "910:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$5948_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "921:10:0",
                      "memberName": "diamondCut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5338,
                      "src": "910:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$8640_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)"
                      }
                    },
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "910:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "910:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48,
                        "name": "_tokenModule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "996:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$8640_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 51,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1018:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1010:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1010:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1010:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1022:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$8640_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 45,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5948,
                        "src": "974:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$5948_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "985:10:0",
                      "memberName": "diamondCut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5338,
                      "src": "974:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$8640_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "974:51:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 56,
                      "name": "_backupAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1039:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1065:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1057:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 57,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1057:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1057:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1039:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67,
                  "nodeType": "IfStatement",
                  "src": "1035:66:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 62,
                          "name": "LibErrors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5959,
                          "src": "1076:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibErrors_$5959_$",
                            "typeString": "type(library LibErrors)"
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1086:13:0",
                        "memberName": "NoZeroAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5958,
                        "src": "1076:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1076:25:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 66,
                    "nodeType": "RevertStatement",
                    "src": "1069:32:0"
                  }
                },
                {
                  "assignments": [
                    70
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70,
                      "mutability": "mutable",
                      "name": "fsData",
                      "nameLocation": "1189:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 136,
                      "src": "1160:35:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetAndSelectorData_$6204_storage_ptr",
                        "typeString": "struct FacetAndSelectorData"
                      },
                      "typeName": {
                        "id": 69,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 68,
                          "name": "FacetAndSelectorData",
                          "nameLocations": [
                            "1160:20:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6204,
                          "src": "1160:20:0"
                        },
                        "referencedDeclaration": 6204,
                        "src": "1160:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FacetAndSelectorData_$6204_storage_ptr",
                          "typeString": "struct FacetAndSelectorData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 71,
                        "name": "LibStorageBinder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6426,
                        "src": "1198:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibStorageBinder_$6426_$",
                          "typeString": "type(library LibStorageBinder)"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1228:26:0",
                      "memberName": "_bindAndReturnFacetStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6398,
                      "src": "1198:56:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_FacetAndSelectorData_$6204_storage_ptr_$",
                        "typeString": "function () pure returns (struct FacetAndSelectorData storage pointer)"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1198:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetAndSelectorData_$6204_storage_ptr",
                      "typeString": "struct FacetAndSelectorData storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1160:96:0"
                },
                {
                  "expression": {
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 75,
                          "name": "fsData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "1266:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetAndSelectorData_$6204_storage_ptr",
                            "typeString": "struct FacetAndSelectorData storage pointer"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1273:12:0",
                        "memberName": "activeModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6196,
                        "src": "1266:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 79,
                      "indexExpression": {
                        "hexValue": "53656c6563746f72",
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1286:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3cda44c2f17bb723f4e1c3a359aed158fb91ee0a75bddf025f22e18a7af9c4b",
                          "typeString": "literal_string \"Selector\""
                        },
                        "value": "Selector"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1266:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1300:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1266:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1266:38:0"
                },
                {
                  "expression": {
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 83,
                          "name": "fsData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "1314:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetAndSelectorData_$6204_storage_ptr",
                            "typeString": "struct FacetAndSelectorData storage pointer"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1321:12:0",
                        "memberName": "activeModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6196,
                        "src": "1314:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 87,
                      "indexExpression": {
                        "hexValue": "546f6b656e",
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1334:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                          "typeString": "literal_string \"Token\""
                        },
                        "value": "Token"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1314:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1345:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1314:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53656c6563746f72",
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1385:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3cda44c2f17bb723f4e1c3a359aed158fb91ee0a75bddf025f22e18a7af9c4b",
                          "typeString": "literal_string \"Selector\""
                        },
                        "value": "Selector"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b3cda44c2f17bb723f4e1c3a359aed158fb91ee0a75bddf025f22e18a7af9c4b",
                          "typeString": "literal_string \"Selector\""
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 91,
                          "name": "fsData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "1359:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetAndSelectorData_$6204_storage_ptr",
                            "typeString": "struct FacetAndSelectorData storage pointer"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1366:13:0",
                        "memberName": "activeModules",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6203,
                        "src": "1359:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1380:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1359:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1359:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1359:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "546f6b656e",
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1432:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                          "typeString": "literal_string \"Token\""
                        },
                        "value": "Token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                          "typeString": "literal_string \"Token\""
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 99,
                          "name": "fsData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "1406:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetAndSelectorData_$6204_storage_ptr",
                            "typeString": "struct FacetAndSelectorData storage pointer"
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1413:13:0",
                        "memberName": "activeModules",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6203,
                        "src": "1406:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1427:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1406:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1406:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1406:34:0"
                },
                {
                  "expression": {
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 107,
                        "name": "fsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1450:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FacetAndSelectorData_$6204_storage_ptr",
                          "typeString": "struct FacetAndSelectorData storage pointer"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1457:13:0",
                      "memberName": "backupAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6190,
                      "src": "1450:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 110,
                      "name": "_backupAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1473:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1450:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1450:37:0"
                },
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 113,
                        "name": "fsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1497:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FacetAndSelectorData_$6204_storage_ptr",
                          "typeString": "struct FacetAndSelectorData storage pointer"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1504:10:0",
                      "memberName": "pingWindow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6192,
                      "src": "1497:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 116,
                      "name": "_pingWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1517:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1497:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "1497:31:0"
                },
                {
                  "expression": {
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 119,
                        "name": "fsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1538:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FacetAndSelectorData_$6204_storage_ptr",
                          "typeString": "struct FacetAndSelectorData storage pointer"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1545:7:0",
                      "memberName": "vaultID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6184,
                      "src": "1538:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 122,
                      "name": "_vaultID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1555:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1538:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1538:25:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 128,
                        "name": "_vaultOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1598:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 125,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5948,
                        "src": "1573:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$5948_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1584:13:0",
                      "memberName": "setVaultOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5169,
                      "src": "1573:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1573:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1573:37:0"
                },
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 131,
                      "name": "vaultFactoryDiamond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1620:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 132,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1642:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1646:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1642:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1620:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:32:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "_selectorModule",
                  "nameLocation": "702:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "672:45:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FacetCut_$8640_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IDiamondCut.FacetCut[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 17,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 16,
                        "name": "IDiamondCut.FacetCut",
                        "nameLocations": [
                          "672:11:0",
                          "684:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8640,
                        "src": "672:20:0"
                      },
                      "referencedDeclaration": 8640,
                      "src": "672:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$8640_storage_ptr",
                        "typeString": "struct IDiamondCut.FacetCut"
                      }
                    },
                    "id": 18,
                    "nodeType": "ArrayTypeName",
                    "src": "672:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FacetCut_$8640_storage_$dyn_storage_ptr",
                      "typeString": "struct IDiamondCut.FacetCut[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "_tokenModule",
                  "nameLocation": "757:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "727:42:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FacetCut_$8640_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IDiamondCut.FacetCut[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 21,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 20,
                        "name": "IDiamondCut.FacetCut",
                        "nameLocations": [
                          "727:11:0",
                          "739:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8640,
                        "src": "727:20:0"
                      },
                      "referencedDeclaration": 8640,
                      "src": "727:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$8640_storage_ptr",
                        "typeString": "struct IDiamondCut.FacetCut"
                      }
                    },
                    "id": 22,
                    "nodeType": "ArrayTypeName",
                    "src": "727:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FacetCut_$8640_storage_$dyn_storage_ptr",
                      "typeString": "struct IDiamondCut.FacetCut[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_vaultOwner",
                  "nameLocation": "787:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "779:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "779:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "_backupAddress",
                  "nameLocation": "816:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "808:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "_pingWindow",
                  "nameLocation": "848:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "840:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_vaultID",
                  "nameLocation": "877:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "869:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "662:229:0"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "900:0:0"
            },
            "scope": 173,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 168,
            "nodeType": "FunctionDefinition",
            "src": "1786:1032:0",
            "nodes": [],
            "body": {
              "id": 167,
              "nodeType": "Block",
              "src": "1814:1004:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 142,
                      "mutability": "mutable",
                      "name": "fsData",
                      "nameLocation": "1853:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 167,
                      "src": "1824:35:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetAndSelectorData_$6204_storage_ptr",
                        "typeString": "struct FacetAndSelectorData"
                      },
                      "typeName": {
                        "id": 141,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 140,
                          "name": "FacetAndSelectorData",
                          "nameLocations": [
                            "1824:20:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6204,
                          "src": "1824:20:0"
                        },
                        "referencedDeclaration": 6204,
                        "src": "1824:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FacetAndSelectorData_$6204_storage_ptr",
                          "typeString": "struct FacetAndSelectorData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 146,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 143,
                        "name": "LibStorageBinder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6426,
                        "src": "1862:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibStorageBinder_$6426_$",
                          "typeString": "type(library LibStorageBinder)"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1892:26:0",
                      "memberName": "_bindAndReturnFacetStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6398,
                      "src": "1862:56:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_FacetAndSelectorData_$6204_storage_ptr_$",
                        "typeString": "function () pure returns (struct FacetAndSelectorData storage pointer)"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1862:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetAndSelectorData_$6204_storage_ptr",
                      "typeString": "struct FacetAndSelectorData storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1824:96:0"
                },
                {
                  "assignments": [
                    148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 148,
                      "mutability": "mutable",
                      "name": "facet",
                      "nameLocation": "1983:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 167,
                      "src": "1975:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 147,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1975:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 155,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "expression": {
                          "id": 149,
                          "name": "fsData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "1991:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetAndSelectorData_$6204_storage_ptr",
                            "typeString": "struct FacetAndSelectorData storage pointer"
                          }
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1998:26:0",
                        "memberName": "selectorToFacetAndPosition",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6170,
                        "src": "1991:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$6159_storage_$",
                          "typeString": "mapping(bytes4 => struct FacetAddressAndPosition storage ref)"
                        }
                      },
                      "id": 153,
                      "indexExpression": {
                        "expression": {
                          "id": 151,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2025:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2029:3:0",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "src": "2025:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1991:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetAddressAndPosition_$6159_storage",
                        "typeString": "struct FacetAddressAndPosition storage ref"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2034:12:0",
                    "memberName": "facetAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6156,
                    "src": "1991:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1975:71:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 157,
                          "name": "facet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 148,
                          "src": "2064:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2081:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2073:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 158,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2073:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2073:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2064:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374",
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2085:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e6486aeb9db70da259b7171a739046119facaec2d8a6bd46f1145fe8391014a",
                          "typeString": "literal_string \"Diamond: Function does not exist\""
                        },
                        "value": "Diamond: Function does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e6486aeb9db70da259b7171a739046119facaec2d8a6bd46f1145fe8391014a",
                          "typeString": "literal_string \"Diamond: Function does not exist\""
                        }
                      ],
                      "id": 156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2056:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2056:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2056:64:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2228:584:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2311:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2314:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2317:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2317:14:0"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "2298:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2298:34:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2298:34:0"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2398:65:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "2425:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2425:5:0"
                            },
                            {
                              "name": "facet",
                              "nodeType": "YulIdentifier",
                              "src": "2432:5:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2439:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2442:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2442:14:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2458:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2461:1:0",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "2412:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2412:51:0"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "2402:6:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2527:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2530:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2533:14:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2533:16:0"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "2512:14:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2512:38:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2512:38:0"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2663:59:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2688:1:0",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "2691:14:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2691:16:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "2681:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2681:27:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2681:27:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2656:66:0",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2661:1:0",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2743:59:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2768:1:0",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "2771:14:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2771:16:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "2761:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2761:27:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2761:27:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2735:67:0",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "2637:6:0"
                        },
                        "nodeType": "YulSwitch",
                        "src": "2630:172:0"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 148,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2432:5:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 166,
                  "nodeType": "InlineAssembly",
                  "src": "2219:593:0"
                }
              ]
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1794:2:0"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1814:0:0"
            },
            "scope": 173,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 172,
            "nodeType": "FunctionDefinition",
            "src": "2824:29:0",
            "nodes": [],
            "body": {
              "id": 171,
              "nodeType": "Block",
              "src": "2851:2:0",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2831:2:0"
            },
            "returnParameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2851:0:0"
            },
            "scope": 173,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "VaultDiamond",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          173
        ],
        "name": "VaultDiamond",
        "nameLocation": "591:12:0",
        "scope": 174,
        "usedErrors": [
          5102,
          5106,
          5108,
          5112,
          5116,
          5118,
          5120,
          5124,
          5128,
          5130,
          5132,
          5134,
          5958
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 0
}