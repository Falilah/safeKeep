{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EmptyCalldata",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "ImmutableFunction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InValidFacetCutAction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InitCallFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MustBeZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoCode",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoSelectorsInFacet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonEmptyCalldata",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "NonExistentSelector",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "SameSelectorReplacement",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "SelectorExists",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "slot",
          "type": "bytes32"
        }
      ],
      "name": "SlotWrittenTo",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_diamondCutFacet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_backup",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "681:2639:0:-:0;;;797:22;822:9;797:34;;841:40;866:14;841:24;;;;;:40;;:::i;:::-;787:101;681:2639;;1475:313:7;1536:27;1566:58;:56;;;;;:58;;:::i;:::-;1658:20;;;;;-1:-1:-1;;;;;1688:32:7;;;-1:-1:-1;;;;;;1688:32:7;;;;;;;1735:46;;1536:88;;-1:-1:-1;1658:20:7;;;;1735:46;;1634:21;;1735:46;1526:262;;1475:313;:::o;2089:481:11:-;2174:27;2217:13;2233:208;2262:26;;;;;;;;;;;;;-1:-1:-1;;;2262:26:11;;;2302:21;;;;;;;;;;;;;-1:-1:-1;;;2302:21:11;;;2337:22;;;;;;;;;;;;;-1:-1:-1;;;2337:22:11;;;2373:23;;;;;;;;;;;;;-1:-1:-1;;;2373:23:11;;;2410:21;;;;;;;;;;;;;-1:-1:-1;;;2410:21:11;;;2233:15;;;:208;;:::i;:::-;2217:224;;2451:20;392:26;;;;;;;;:::i;:::-;-1:-1:-1;;392:26:11;;;;;;;;;;;;;;382:37;;392:26;;;;;382:37;2474:17;;;;;2089:481;-1:-1:-1;;2089:481:11:o;810:530::-;1039:12;1148:11;1181;1214;1247;1280;1116:193;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1070:263;;;;;;1063:270;;810:530;;;;;;;:::o;681:2639:0:-;;;;;;;;:::o;14:423:22:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:875::-;783:3;772:9;765:22;746:4;810:46;851:3;840:9;836:19;828:6;810:46;:::i;:::-;904:9;896:6;892:22;887:2;876:9;872:18;865:50;938:33;964:6;956;938:33;:::i;:::-;924:47;;1019:9;1011:6;1007:22;1002:2;991:9;987:18;980:50;1053:33;1079:6;1071;1053:33;:::i;:::-;1039:47;;1134:9;1126:6;1122:22;1117:2;1106:9;1102:18;1095:50;1168:33;1194:6;1186;1168:33;:::i;:::-;1154:47;;1250:9;1242:6;1238:22;1232:3;1221:9;1217:19;1210:51;1278:33;1304:6;1296;1278:33;:::i;:::-;1270:41;442:875;-1:-1:-1;;;;;;;;442:875:22:o;:::-;681:2639:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100225760003560e01c8063f09a4016146100cf57610029565b3661002957005b60006100336100f1565b600080356001600160e01b0319168152602082905260409020549091506001600160a01b0316806100ab5760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f7420657869737460448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100ca573d6000f35b3d6000fd5b3480156100db57600080fd5b506100ef6100ea366004611043565b610188565b005b60008061014e60405180604001604052600f8152806020016e111a585b5bdb9910dd5d119858d95d608a1b81525060405180604001604052601181528060200170111a585b5bdb99131bdd5c19519858d95d607a1b8152506104af565b90506000604051806020016101629061101b565b601f1982820381018352601f909101166040528051602091909101209190911892915050565b60006101926103ed565b60005490915060ff16156101a8576101a8611076565b6101b06104e2565b6001600160a01b0316336001600160a01b031614806101e757506101d26104e2565b6001600160a01b0316326001600160a01b0316145b6101f3576101f3611076565b604080516001808252818301909252600091816020015b6040805160608082018352600080835260208301529181019190915281526020019060019003908161020a5750506040805160028082526060820183529293506000929091602083019080368337019050509050631f931c1c60e01b816000815181106102795761027961108c565b6001600160e01b031990921660209283029190910190910152805163a2a12bfb60e01b90829060019081106102b0576102b061108c565b6001600160e01b031990921660209283029190910182015260408051606081019091526001600160a01b03871681529081016000815260200182815250826000815181106103005761030061108c565b6020026020010181905250610326826000604051806020016040528060008152506104fe565b6003830180546001600160a01b0319166001600160a01b0386161790556000805460ff1916600117905560405183815283907fea758a5dc298aa5c6654519a7bef61995e50b3ba4767069e0238a28b7f407b279060200160405180910390a1505050505050565b60006103976103ed565b6001810180546001600160a01b038581166001600160a01b031983168117909355604051939450169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60008061014e60405180604001604052600f8152806020016e111a585b5bdb9910dd5d119858d95d608a1b81525060405180604001604052600a81528060200169115490cc8c119858d95d60b21b81525060405180604001604052600b8152806020016a115490cdcc8c519858d95d60aa1b81525060405180604001604052600c8152806020016b115490cc4c4d4d519858d95d60a21b81525060405180604001604052600a8152806020016915985d5b1d119858d95d60b21b8152506106cf565b600082826040516020016104c4929190611108565b60405160208183030381529060405280519060200120905092915050565b60006104ec6103ed565b600101546001600160a01b0316919050565b60005b835181101561068457600084828151811061051e5761051e61108c565b60200260200101516020015190506000600281111561053f5761053f6110a2565b816002811115610551576105516110a2565b0361059f5761059a85838151811061056b5761056b61108c565b6020026020010151600001518684815181106105895761058961108c565b60200260200101516040015161070b565b610671565b60018160028111156105b3576105b36110a2565b036105fc5761059a8583815181106105cd576105cd61108c565b6020026020010151600001518684815181106105eb576105eb61108c565b602002602001015160400151610876565b6002816002811115610610576106106110a2565b036106595761059a85838151811061062a5761062a61108c565b6020026020010151600001518684815181106106485761064861108c565b6020026020010151604001516109bc565b60405162c5e5d760e31b815260040160405180910390fd5b508061067c8161114c565b915050610501565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516106b893929190611165565b60405180910390a16106ca8282610ab8565b505050565b600085858585856040516020016106ea959493929190611265565b60405160208183030381529060405280519060200120905095945050505050565b600081511161072d5760405163092d2fe560e41b815260040160405180910390fd5b60006107376100f1565b90506001600160a01b0383166107605760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b0382169003610796576107968285610bca565b60005b83518110156108415760008482815181106107b6576107b661108c565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156108135760405163501e70c760e01b81526001600160e01b0319831660048201526024016100a2565b61081f8583868a610c1b565b83610829816112d2565b945050505080806108399061114c565b915050610799565b50604051829081907fea758a5dc298aa5c6654519a7bef61995e50b3ba4767069e0238a28b7f407b2790600090a25050505050565b60008151116108985760405163092d2fe560e41b815260040160405180910390fd5b60006108a26100f1565b90506001600160a01b0383166108cb5760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b0382169003610901576109018285610bca565b60005b83518110156108415760008482815181106109215761092161108c565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03908116908716810361098357604051631c04188b60e31b81526001600160e01b0319831660048201526024016100a2565b61098e858284610cbb565b61099a8583868a610c1b565b836109a4816112d2565b945050505080806109b49061114c565b915050610904565b60008151116109de5760405163092d2fe560e41b815260040160405180910390fd5b60006109e86100f1565b90506001600160a01b03831615610a1257604051631be65fe560e21b815260040160405180910390fd5b60005b8251811015610a84576000838281518110610a3257610a3261108c565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316610a6f848284610cbb565b50508080610a7c9061114c565b915050610a15565b50604051819081907fea758a5dc298aa5c6654519a7bef61995e50b3ba4767069e0238a28b7f407b2790600090a250505050565b6001600160a01b038216610aea57805115610ae65760405163c21b1ab760e01b815260040160405180910390fd5b5050565b8051600003610b0c57604051633011e86160e21b815260040160405180910390fd5b6001600160a01b0382163014610b2557610b2582610ffb565b600080836001600160a01b031683604051610b4091906112f8565b600060405180830381855af49150503d8060008114610b7b576040519150601f19603f3d011682016040523d82523d6000602084013e610b80565b606091505b509150915081610bc457805115610bab578060405162461bcd60e51b81526004016100a29190611314565b604051633a18f8dd60e01b815260040160405180910390fd5b50505050565b610bd381610ffb565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b038216610ced57604051622902d360e91b81526001600160e01b0319821660048201526024016100a2565b306001600160a01b03831603610d225760405163069731c560e41b81526001600160e01b0319821660048201526024016100a2565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b03169291610d719161132e565b9050808214610e63576001600160a01b03841660009081526001860160205260408120805483908110610da657610da661108c565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610df757610df761108c565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610e8c57610e8c611347565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b03198516825286905260408120819055819003610ff4576002850154600090610eef9060019061132e565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610f9e576000876002018381548110610f2e57610f2e61108c565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610f5f57610f5f61108c565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610fb157610fb1611347565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505b5050505050565b803b80610ae657604051633c11a9c560e21b815260040160405180910390fd5b608d8061135e83390190565b80356001600160a01b038116811461103e57600080fd5b919050565b6000806040838503121561105657600080fd5b61105f83611027565b915061106d60208401611027565b90509250929050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60005b838110156110d35781810151838201526020016110bb565b50506000910152565b600081518084526110f48160208601602086016110b8565b601f01601f19169290920160200192915050565b60408152600061111b60408301856110dc565b828103602084015261112d81856110dc565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161115e5761115e611136565b5060010190565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b8481101561123557898403607f19018652815180516001600160a01b031685528381015189860190600381106111d457634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156112205783516001600160e01b03191682529286019260019290920191908601906111f6565b5097850197955050509082019060010161118e565b50506001600160a01b038a1690880152868103604088015261125781896110dc565b9a9950505050505050505050565b60a08152600061127860a08301886110dc565b828103602084015261128a81886110dc565b9050828103604084015261129e81876110dc565b905082810360608401526112b281866110dc565b905082810360808401526112c681856110dc565b98975050505050505050565b60006001600160601b038083168181036112ee576112ee611136565b6001019392505050565b6000825161130a8184602087016110b8565b9190910192915050565b60208152600061132760208301846110dc565b9392505050565b8181038181111561134157611341611136565b92915050565b634e487b7160e01b600052603160045260246000fdfe60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d3490995da7c482656cf5299d05897e7ad36d1e947ab8134ff8177e69fb907fa64736f6c63430008120033a26469706673582212206ecee46f126d3884de25254292e9d459947b4a0bde4a476cd55a9075fa6c685464736f6c63430008120033",
    "sourceMap": "681:2639:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;2164:35;2202:58;:56;:58::i;:::-;2315:13;2365:7;;-1:-1:-1;;;;;;2365:7:0;2331:42;;;;;;;;;:55;:42;;-1:-1:-1;;;;;;2331:55:0;;2396:64;;;;-1:-1:-1;;;2396:64:0;;216:2:22;2396:64:0;;;198:21:22;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;2396:64:0;;;;;;;;;2657:14;2654:1;2651;2638:34;2801:1;2798;2782:14;2779:1;2772:5;2765;2752:51;2873:16;2870:1;2867;2852:38;2977:6;2996:66;;;;3111:16;3108:1;3101:27;2996:66;3031:16;3028:1;3021:27;894:1106;;;;;;;;;;-1:-1:-1;894:1106:0;;;;;:::i;:::-;;:::i;:::-;;1346:397:11;1431:41;1488:13;1504:107;1533:26;;;;;;;;;;;;;-1:-1:-1;;;1533:26:11;;;1573:28;;;;;;;;;;;;;-1:-1:-1;;;1573:28:11;;;1504:15;:107::i;:::-;1488:123;;1621:20;392:26;;;;;;;;:::i;:::-;-1:-1:-1;;392:26:11;;;;;;;;;;;;;;382:37;;392:26;;;;;382:37;1644:17;;;;;1346:397;-1:-1:-1;;1346:397:11:o;894:1106:0:-;968:27;998:58;:56;:58::i;:::-;1074:5;;968:88;;-1:-1:-1;1074:5:0;;1073:6;1066:14;;;;:::i;:::-;1124:23;:21;:23::i;:::-;-1:-1:-1;;;;;1110:37:0;:10;-1:-1:-1;;;;;1110:37:0;;:93;;;;1180:23;:21;:23::i;:::-;-1:-1:-1;;;;;1167:36:0;:9;-1:-1:-1;;;;;1167:36:0;;1110:93;1090:123;;;;:::i;:::-;1332:29;;;1359:1;1332:29;;;;;;;;;1296:33;;1332:29;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1332:29:0;;;;;;;;;;;;-1:-1:-1;;1407:15:0;;;1420:1;1407:15;;;;;;;;1296:65;;-1:-1:-1;1371:33:0;;1407:15;;;;;;;;;;;;-1:-1:-1;1407:15:0;1371:51;;1455:31;;;1432:17;1450:1;1432:20;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1432:54:0;;;:20;;;;;;;;;;;:54;1496:20;;-1:-1:-1;;;1519:32:0;1496:17;;1514:1;;1496:20;;;;;;:::i;:::-;-1:-1:-1;;;;;;1496:55:0;;;:20;;;;;;;;;;:55;1570:178;;;;;;;;;-1:-1:-1;;;;;1570:178:0;;;;;;;-1:-1:-1;1570:178:0;;;;1720:17;1570:178;;;1561:3;1565:1;1561:6;;;;;;;;:::i;:::-;;;;;;:187;;;;1759:42;1781:3;1794:1;1759:42;;;;;;;;;;;;:21;:42::i;:::-;1811:23;;;:33;;-1:-1:-1;;;;;;1811:33:0;-1:-1:-1;;;;;1811:33:0;;;;;-1:-1:-1;1854:12:0;;-1:-1:-1;;1854:12:0;-1:-1:-1;1854:12:0;;;1972:21;;521:25:22;;;1811:23:0;;1972:21;;509:2:22;494:18;1972:21:0;;;;;;;958:1042;;;;894:1106;;:::o;1475:313:7:-;1536:27;1566:58;:56;:58::i;:::-;1658:20;;;;;-1:-1:-1;;;;;1688:32:7;;;-1:-1:-1;;;;;;1688:32:7;;;;;;;1735:46;;1536:88;;-1:-1:-1;1658:20:7;;;;1735:46;;1634:21;;1735:46;1526:262;;1475:313;:::o;2089:481:11:-;2174:27;2217:13;2233:208;2262:26;;;;;;;;;;;;;-1:-1:-1;;;2262:26:11;;;2302:21;;;;;;;;;;;;;-1:-1:-1;;;2302:21:11;;;2337:22;;;;;;;;;;;;;-1:-1:-1;;;2337:22:11;;;2373:23;;;;;;;;;;;;;-1:-1:-1;;;2373:23:11;;;2410:21;;;;;;;;;;;;;-1:-1:-1;;;2410:21:11;;;2233:15;:208::i;588:216::-;712:12;770:11;783;759:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;743:54;;;;;;736:61;;588:216;;;;:::o;1794:185:7:-;1839:22;1890:58;:56;:58::i;:::-;:82;;;-1:-1:-1;;;;;1890:82:7;;1794:185;-1:-1:-1;1794:185:7:o;2356:1268::-;2525:18;2507:1007;2570:11;:18;2557:10;:31;2507:1007;;;2639:33;2675:11;2687:10;2675:23;;;;;;;;:::i;:::-;;;;;;;:30;;;2639:66;;2733:30;2723:40;;;;;;;;:::i;:::-;:6;:40;;;;;;;;:::i;:::-;;2719:785;;2783:151;2817:11;2829:10;2817:23;;;;;;;;:::i;:::-;;;;;;;:36;;;2875:11;2887:10;2875:23;;;;;;;;:::i;:::-;;;;;;;:41;;;2783:12;:151::i;:::-;2719:785;;;2969:34;2959:6;:44;;;;;;;;:::i;:::-;;2955:549;;3023:155;3061:11;3073:10;3061:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3119:11;3131:10;3119:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3023:16;:155::i;2955:549::-;3213:33;3203:6;:43;;;;;;;;:::i;:::-;;3199:305;;3266:154;3303:11;3315:10;3303:23;;;;;;;;:::i;:::-;;;;;;;:36;;;3361:11;3373:10;3361:23;;;;;;;;:::i;:::-;;;;;;;:41;;;3266:15;:154::i;3199:305::-;3466:23;;-1:-1:-1;;;3466:23:7;;;;;;;;;;;3199:305;-1:-1:-1;2602:12:7;;;;:::i;:::-;;;;2507:1007;;;;3528:41;3539:11;3552:5;3559:9;3528:41;;;;;;;;:::i;:::-;;;;;;;;3579:38;3600:5;3607:9;3579:20;:38::i;:::-;2356:1268;;;:::o;810:530:11:-;1039:12;1148:11;1181;1214;1247;1280;1116:193;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1070:263;;;;;;1063:270;;810:530;;;;;;;:::o;3630:1355:7:-;3785:1;3756:18;:25;:30;3752:63;;3795:20;;-1:-1:-1;;;3795:20:7;;;;;;;;;;;3752:63;3825:35;3863:58;:56;:58::i;:::-;3825:96;-1:-1:-1;;;;;;3935:27:7;;3931:55;;3971:15;;-1:-1:-1;;;3971:15:7;;;;;;;;;;;3931:55;-1:-1:-1;;;;;4042:61:7;;3996:23;4042:61;;;:46;;;:61;;;;;:120;;-1:-1:-1;;;;;4240:21:7;;;;4236:83;;4277:31;4286:6;4294:13;4277:8;:31::i;:::-;4346:21;4328:528;4397:18;:25;4381:13;:41;4328:528;;;4476:15;4494:18;4513:13;4494:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;4567:60:7;;4541:23;4567:60;;;;;;;;;;;:90;4494:33;;-1:-1:-1;;;;;;4567:90:7;4675:29;;4671:66;;4713:24;;-1:-1:-1;;;4713:24:7;;-1:-1:-1;;;;;;5966:33:22;;4713:24:7;;;5948:52:22;5921:18;;4713:24:7;5804:202:22;4671:66:7;4751:62;4763:6;4771:8;4781:16;4799:13;4751:11;:62::i;:::-;4827:18;;;;:::i;:::-;;;;4462:394;;4436:15;;;;;:::i;:::-;;;;4328:528;;;-1:-1:-1;4957:21:7;;4922:11;;;;4957:21;;4865:14;;4957:21;3742:1243;;;3630:1355;;:::o;4991:1451::-;5150:1;5121:18;:25;:30;5117:63;;5160:20;;-1:-1:-1;;;5160:20:7;;;;;;;;;;;5117:63;5190:35;5228:58;:56;:58::i;:::-;5190:96;-1:-1:-1;;;;;;5300:27:7;;5296:55;;5336:15;;-1:-1:-1;;;5336:15:7;;;;;;;;;;;5296:55;-1:-1:-1;;;;;5407:61:7;;5361:23;5407:61;;;:46;;;:61;;;;;:120;;-1:-1:-1;;;;;5605:21:7;;;;5601:83;;5642:31;5651:6;5659:13;5642:8;:31::i;:::-;5711:21;5693:619;5762:18;:25;5746:13;:41;5693:619;;;5841:15;5859:18;5878:13;5859:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;5932:60:7;;5906:23;5932:60;;;;;;;;;;;:90;5859:33;;-1:-1:-1;;;;;;5932:90:7;;;;6040:32;;;;6036:94;;6097:33;;-1:-1:-1;;;6097:33:7;;-1:-1:-1;;;;;;5966:33:22;;6097::7;;;5948:52:22;5921:18;;6097:33:7;5804:202:22;6036:94:7;6144:49;6159:6;6167:15;6184:8;6144:14;:49::i;:::-;6207:62;6219:6;6227:8;6237:16;6255:13;6207:11;:62::i;:::-;6283:18;;;;:::i;:::-;;;;5827:485;;5801:15;;;;;:::i;:::-;;;;5693:619;;6448:970;6606:1;6577:18;:25;:30;6573:63;;6616:20;;-1:-1:-1;;;6616:20:7;;;;;;;;;;;6573:63;6646:35;6684:58;:56;:58::i;:::-;6646:96;-1:-1:-1;;;;;;6821:27:7;;;6817:59;;6857:19;;-1:-1:-1;;;6857:19:7;;;;;;;;;;;6817:59;6904:21;6886:403;6955:18;:25;6939:13;:41;6886:403;;;7034:15;7052:18;7071:13;7052:33;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;7125:60:7;;7099:23;7125:60;;;;;;;;;;;:90;7052:33;;-1:-1:-1;;;;;;7125:90:7;7229:49;7125:6;:90;7052:33;7229:14;:49::i;:::-;7020:269;;6994:15;;;;;:::i;:::-;;;;6886:403;;;-1:-1:-1;7390:21:7;;7355:11;;;;7390:21;;7298:14;;7390:21;6563:855;;6448:970;;:::o;10857:736::-;-1:-1:-1;;;;;10971:19:7;;10967:620;;11010:16;;:20;11006:51;;11039:18;;-1:-1:-1;;;11039:18:7;;;;;;;;;;;11006:51;10857:736;;:::o;10967:620::-;11092:9;:16;11112:1;11092:21;11088:49;;11122:15;;-1:-1:-1;;;11122:15:7;;;;;;;;;;;11088:49;-1:-1:-1;;;;;11155:22:7;;11172:4;11155:22;11151:90;;11197:29;11220:5;11197:22;:29::i;:::-;11255:12;11269:18;11291:5;-1:-1:-1;;;;;11291:18:7;11310:9;11291:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11254:66;;;;11339:7;11334:243;;11370:12;;:16;11366:197;;11467:5;11453:21;;-1:-1:-1;;;11453:21:7;;;;;;;;:::i;11366:197::-;11528:16;;-1:-1:-1;;;11528:16:7;;;;;;;;;;;11366:197;11074:513;;10857:736;;:::o;7424:346::-;7543:37;7566:13;7543:22;:37::i;:::-;7684:21;;;:28;;-1:-1:-1;;;;;7590:57:7;;;;;;;:42;;;;:57;;;;;;;:91;;:122;;;7722:41;;;;;;;;;;;;;;-1:-1:-1;;;;;;7722:41:7;;;;;;7424:346::o;7776:523::-;-1:-1:-1;;;;;;7958:57:7;;:46;:57;;;;;;;;;;;:115;;-1:-1:-1;;;;;7958:115:7;;;-1:-1:-1;;;7958:115:7;-1:-1:-1;;;;;7958:115:7;;;;;;8083:44;;;;;;;-1:-1:-1;8083:29:7;;;:44;;;;;:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7958:115;8083:100;;;;;;;;;;;;;;;;;;;8193:57;;;;;:99;;-1:-1:-1;;;;;;8193:99:7;;;;7776:523::o;8305:2546::-;-1:-1:-1;;;;;8460:27:7;;8456:70;;8496:30;;-1:-1:-1;;;8496:30:7;;-1:-1:-1;;;;;;5966:33:22;;8496:30:7;;;5948:52:22;5921:18;;8496:30:7;5804:202:22;8456:70:7;8642:4;-1:-1:-1;;;;;8617:30:7;;;8613:71;;8656:28;;-1:-1:-1;;;8656:28:7;;-1:-1:-1;;;;;;5966:33:22;;8656:28:7;;;5948:52:22;5921:18;;8656:28:7;5804:202:22;8613:71:7;-1:-1:-1;;;;;;8795:57:7;;8768:24;8795:57;;;;;;;;;;;:95;-1:-1:-1;;;;;8931:57:7;;;;9042:1;8931:42;;;:57;;;;;;:108;-1:-1:-1;;;8795:95:7;;;-1:-1:-1;;;;;8795:95:7;;8768:24;8931:112;;;:::i;:::-;8900:143;;9145:20;9125:16;:40;9121:497;;-1:-1:-1;;;;;9203:61:7;;9181:19;9203:61;;;:46;;;:61;;;;;:118;;9300:20;;9203:118;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;9335:44:7;;;;:29;;;:44;;;;;;;:110;;9203:118;;;;;;;;;;;;;;-1:-1:-1;9203:118:7;;9335:44;9415:16;;9335:110;;;;;;:::i;:::-;;;;;;;;;;;;;:125;;;:110;;;;;;:125;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9474:64:7;;;;;;;;;;;;:133;;-1:-1:-1;;;;;9474:133:7;-1:-1:-1;;;;;;;;9474:133:7;;;;;;9121:497;-1:-1:-1;;;;;9663:44:7;;;;;;:29;;;:44;;;;;:68;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;9663:68:7;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9748:44:7;;;;;;;;;;9741:51;;;9887:25;;;9883:962;;10054:21;;;:28;10019:32;;10054;;10085:1;;10054:32;:::i;:::-;-1:-1:-1;;;;;10131:61:7;;10100:28;10131:61;;;:46;;;;:61;;;;;;:99;;10019:67;;-1:-1:-1;10248:48:7;;;10244:430;;10316:24;10343:6;:21;;10386:24;10343:85;;;;;;;;:::i;:::-;;;;;;;;;;;10446:21;;;:43;;-1:-1:-1;;;;;10343:85:7;;;;-1:-1:-1;10343:85:7;;10468:20;;10446:43;;;;;;:::i;:::-;;;;;;;;;;;;;:62;;-1:-1:-1;;;;;;10446:62:7;-1:-1:-1;;;;;10446:62:7;;;;;;10526:68;;;;;;-1:-1:-1;10526:50:7;;;:68;;;;;;:110;:133;;;10244:430;10687:6;:21;;:27;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;10687:27:7;;;;;-1:-1:-1;;;;;;10687:27:7;;;;;;;;;-1:-1:-1;;;;;10735:61:7;;;;10687:27;10735:46;;;:61;;;;;;:99;10728:106;-1:-1:-1;;9883:962:7;8446:2405;;8305:2546;;;:::o;11599:230::-;11743:22;;11788:17;11784:38;;11814:8;;-1:-1:-1;;;11814:8:7;;;;;;;;;;;-1:-1:-1;;;;;;;;:::o;557:173:22:-;625:20;;-1:-1:-1;;;;;674:31:22;;664:42;;654:70;;720:1;717;710:12;654:70;557:173;;;:::o;735:260::-;803:6;811;864:2;852:9;843:7;839:23;835:32;832:52;;;880:1;877;870:12;832:52;903:29;922:9;903:29;:::i;:::-;893:39;;951:38;985:2;974:9;970:18;951:38;:::i;:::-;941:48;;735:260;;;;;:::o;1000:127::-;1061:10;1056:3;1052:20;1049:1;1042:31;1092:4;1089:1;1082:15;1116:4;1113:1;1106:15;1264:127;1325:10;1320:3;1316:20;1313:1;1306:31;1356:4;1353:1;1346:15;1380:4;1377:1;1370:15;1396:127;1457:10;1452:3;1448:20;1445:1;1438:31;1488:4;1485:1;1478:15;1512:4;1509:1;1502:15;1528:250;1613:1;1623:113;1637:6;1634:1;1631:13;1623:113;;;1713:11;;;1707:18;1694:11;;;1687:39;1659:2;1652:10;1623:113;;;-1:-1:-1;;1770:1:22;1752:16;;1745:27;1528:250::o;1783:271::-;1825:3;1863:5;1857:12;1890:6;1885:3;1878:19;1906:76;1975:6;1968:4;1963:3;1959:14;1952:4;1945:5;1941:16;1906:76;:::i;:::-;2036:2;2015:15;-1:-1:-1;;2011:29:22;2002:39;;;;2043:4;1998:50;;1783:271;-1:-1:-1;;1783:271:22:o;2059:383::-;2256:2;2245:9;2238:21;2219:4;2282:45;2323:2;2312:9;2308:18;2300:6;2282:45;:::i;:::-;2375:9;2367:6;2363:22;2358:2;2347:9;2343:18;2336:50;2403:33;2429:6;2421;2403:33;:::i;:::-;2395:41;2059:383;-1:-1:-1;;;;;2059:383:22:o;2447:127::-;2508:10;2503:3;2499:20;2496:1;2489:31;2539:4;2536:1;2529:15;2563:4;2560:1;2553:15;2579:135;2618:3;2639:17;;;2636:43;;2659:18;;:::i;:::-;-1:-1:-1;2706:1:22;2695:13;;2579:135::o;2828:2091::-;3096:4;3125:2;3165;3154:9;3150:18;3195:2;3184:9;3177:21;3218:6;3253;3247:13;3284:6;3276;3269:22;3310:3;3300:13;;3344:2;3333:9;3329:18;3322:25;;3406:2;3396:6;3393:1;3389:14;3378:9;3374:30;3370:39;3428:4;3467:2;3459:6;3455:15;3488:1;3498:1249;3512:6;3509:1;3506:13;3498:1249;;;3577:22;;;-1:-1:-1;;3573:37:22;3561:50;;3634:13;;3721:9;;-1:-1:-1;;;;;3717:35:22;3702:51;;3792:11;;;3786:18;3674:15;;;;3844:1;3827:19;;3817:170;;3897:10;3892:3;3888:20;3885:1;3878:31;3936:4;3933:1;3926:15;3968:4;3965:1;3958:15;3817:170;4007:15;;;4000:37;4060:4;4105:11;;;4099:18;4137:15;;;4130:27;;;4218:21;;4252:24;;;;4342:23;;;;-1:-1:-1;;4298:15:22;;;;4403:236;4419:8;4414:3;4411:17;4403:236;;;4500:15;;-1:-1:-1;;;;;;4496:42:22;4482:57;;4608:17;;;;4447:1;4438:11;;;;;4565:14;;;;4403:236;;;-1:-1:-1;4725:12:22;;;;4662:5;-1:-1:-1;;;4690:15:22;;;;3534:1;3527:9;3498:1249;;;-1:-1:-1;;;;;;;2785:31:22;;4783:18;;;2773:44;4840:22;;;4833:4;4818:20;;4811:52;4880:33;4844:6;4898;4880:33;:::i;:::-;4872:41;2828:2091;-1:-1:-1;;;;;;;;;;2828:2091:22:o;4924:875::-;5265:3;5254:9;5247:22;5228:4;5292:46;5333:3;5322:9;5318:19;5310:6;5292:46;:::i;:::-;5386:9;5378:6;5374:22;5369:2;5358:9;5354:18;5347:50;5420:33;5446:6;5438;5420:33;:::i;:::-;5406:47;;5501:9;5493:6;5489:22;5484:2;5473:9;5469:18;5462:50;5535:33;5561:6;5553;5535:33;:::i;:::-;5521:47;;5616:9;5608:6;5604:22;5599:2;5588:9;5584:18;5577:50;5650:33;5676:6;5668;5650:33;:::i;:::-;5636:47;;5732:9;5724:6;5720:22;5714:3;5703:9;5699:19;5692:51;5760:33;5786:6;5778;5760:33;:::i;:::-;5752:41;4924:875;-1:-1:-1;;;;;;;;4924:875:22:o;6011:217::-;6049:3;-1:-1:-1;;;;;6138:2:22;6131:5;6127:14;6165:2;6156:7;6153:15;6150:41;;6171:18;;:::i;:::-;6220:1;6207:15;;6011:217;-1:-1:-1;;;6011:217:22:o;6233:287::-;6362:3;6400:6;6394:13;6416:66;6475:6;6470:3;6463:4;6455:6;6451:17;6416:66;:::i;:::-;6498:16;;;;;6233:287;-1:-1:-1;;6233:287:22:o;6525:220::-;6674:2;6663:9;6656:21;6637:4;6694:45;6735:2;6724:9;6720:18;6712:6;6694:45;:::i;:::-;6686:53;6525:220;-1:-1:-1;;;6525:220:22:o;6750:128::-;6817:9;;;6838:11;;;6835:37;;;6852:18;;:::i;:::-;6750:128;;;;:::o;6883:127::-;6944:10;6939:3;6935:20;6932:1;6925:31;6975:4;6972:1;6965:15;6999:4;6996:1;6989:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "init(address,address)": "f09a4016"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EmptyCalldata\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"ImmutableFunction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InValidFacetCutAction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustBeZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSelectorsInFacet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonEmptyCalldata\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"NonExistentSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"SameSelectorReplacement\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"SelectorExists\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"SlotWrittenTo\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_diamondCutFacet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_backup\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vault/VaultDiamond.sol\":\"VaultDiamond\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solmate.git/=lib/solmate/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/Vault/VaultDiamond.sol\":{\"keccak256\":\"0x7031c76793ef51627935651e487cf5a5cc62b8eacfed3184d81a33cc2c6f8ac9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7912e7dc739fb243ce70d0e08d77e9078041dfe80cd714552b3073019f92d117\",\"dweb:/ipfs/QmVeuuBQMaN3R7L5XvGKhxBGhXwNQ67i8MhDnydbzRB6hG\"]},\"contracts/Vault/facets/DiamondCutFacet.sol\":{\"keccak256\":\"0x88e9c2be0d5b1b9bca07a0c3aeacc9a61b68fea5eb15c9748b3cc317d8528f01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17911d35bb30ede341e6db932abd14c8338e41108fded031cff05b1cf29bbf3d\",\"dweb:/ipfs/QmXYZeUc2ZcEFowAkqXaBU6uUDRQEGCgwjBd13WRnZi1PQ\"]},\"contracts/Vault/facets/DiamondLoupeFacet.sol\":{\"keccak256\":\"0xad9d4671de17dec310b15ef69e709ed59a3f1e78020b8866a1dbe9a9a3470dc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08defeb9fb9051461263afde95cc3a748525f477eb2fb9e5510ac759df5c233d\",\"dweb:/ipfs/QmYLZToc6jEuo9JEWFT5NimzGTX9mz3t5hNQjyxQ8TZwBv\"]},\"contracts/Vault/facets/ERC1155Facet.sol\":{\"keccak256\":\"0xe308088ade66dc08bf25524396b61729ab155688aad5ff25e75b07d7181f303b\",\"urls\":[\"bzz-raw://ab24cd3d40b7f3b4c3940cc32b3929f6ca5cf40033cf175b3aa163356c8235d2\",\"dweb:/ipfs/QmUZP5Gap5LPFDhayboJE8SoFhxqBYvez57n6ccjog5Wt1\"]},\"contracts/Vault/facets/ERC20Facet.sol\":{\"keccak256\":\"0x4143a253426d9460662f136ed00eba085ec0eca5b78271c6f92258988e8a35e6\",\"urls\":[\"bzz-raw://885c2a7e5f8894592a5b8b4014e245165ba86f8ab4089366acf58ab48b25ec10\",\"dweb:/ipfs/QmNxmbEcjCVje1TrXYVV1vWruoG5GMT3jU5sUWUbb2hJSH\"]},\"contracts/Vault/facets/ERC721Facet.sol\":{\"keccak256\":\"0x1dbb36011ba23e1e4284542256d43fb217e48b6956d9aa9d38bd9d0fcc83ba19\",\"urls\":[\"bzz-raw://991c47ec8ad245a7b9fc2034ede3684dcd5dd83cffc9d9e4e7f32d53e779e460\",\"dweb:/ipfs/QmTWzNGM1PZgSrVikvCGp397B825Q2caRHYYhEHT7KUpJg\"]},\"contracts/Vault/facets/VaultFacet.sol\":{\"keccak256\":\"0xa756bf80494f0a297d32902e2c8e7502aa0b9a6ad69355e3208443c63106355d\",\"urls\":[\"bzz-raw://8c00ba4843b0664758c9c237c47e818f3affc9063e378aea341afe5c874d806b\",\"dweb:/ipfs/Qmdq7JVAaoKDqCzaWpFjb6WXjTK2TMKb9SvdTH7cnVLy9D\"]},\"contracts/Vault/libraries/LibDiamond.sol\":{\"keccak256\":\"0x74ef0c6c6f016c0aab75fd6df0e7722e374fc6fa06f29c257284a86611869e51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00872f146f635a9e60738f9118dc128b4337b2a8d4e8a93ffc43897425009220\",\"dweb:/ipfs/QmStyBN89ySFTvdPC3GHDadFEsexoVLVU5t2f6DtwmMHDf\"]},\"contracts/Vault/libraries/LibKeep.sol\":{\"keccak256\":\"0x9d9e676fb7ffb9fe3a7dc9fb6da4859ccca5fe173a2f8ccd3e86f0978bca7aca\",\"urls\":[\"bzz-raw://91c5c9ee3e12f8db82464a9afb2c1f96cd1d9feb5d070436d6390ccb0d53c379\",\"dweb:/ipfs/QmUS58RGN8rFNd9bjBmXxiBWtdkT9YubtKDuMHmdVXaPeV\"]},\"contracts/Vault/libraries/LibKeepHelpers.sol\":{\"keccak256\":\"0x5fe31c710dbfb3de2c2e4bb1ce6f100e0e6c74d7902227b0aec76497898ff24e\",\"urls\":[\"bzz-raw://4fe30d032683a6b38b7acabe84131e38015487507b326f245a4207eb26d64a50\",\"dweb:/ipfs/QmS8mm7YDYb8RMdrFDUpVFYvd3DmitdEubMSksoL5GmXEx\"]},\"contracts/Vault/libraries/LibLayoutSilo.sol\":{\"keccak256\":\"0x317b8ea028b556e2e7c8320382ba30ac930d52b7204cbe75c0573b9645f5a8c0\",\"urls\":[\"bzz-raw://b57226670dd646eef339641ec7b8b396727d198ed19f1322e8ba468be9d9a620\",\"dweb:/ipfs/QmaE8snxxGmASTM8VZvLGQihu61gtHwAPMLxRsZbmCToEo\"]},\"contracts/Vault/libraries/LibStorageBinder.sol\":{\"keccak256\":\"0x51c77b65e88d8d626ad2880b6ce6087a857785fc9e69a710722ec07ec6435ea1\",\"urls\":[\"bzz-raw://3ef0850a0db792a337e367a6e28069887a337b4e4d946fd255d7f3af8ca8fe05\",\"dweb:/ipfs/QmNffZEeQXKALdArjEKjyJXwMxbMXJjUihWzaKH4ijbGnC\"]},\"contracts/Vault/libraries/LibTokens.sol\":{\"keccak256\":\"0x09b296abe5056b95e1b4070448a8a24d908d5c8fff773475edfd31950d9c5068\",\"urls\":[\"bzz-raw://df4056ef19ecb6ee3663015791ea8642bc0f9ce427eb712e92215abba8408180\",\"dweb:/ipfs/QmU5RQzupokR6v5eUGkekwSMg9fvEpS5sWUdXRqrRQG3bJ\"]},\"contracts/Vault/libraries/LibVaultStorage.sol\":{\"keccak256\":\"0x47e4552d55bf7c1a9398ac811df19648349fed904fe5d95dd1ea01e07e14dcbe\",\"urls\":[\"bzz-raw://a842385d4fc9d07d9a6bd944af7343fab160b15618d5f085c05149e994f83889\",\"dweb:/ipfs/QmRmJkkAZr7TiktGPfhAPPuCKqbyeUXcpjYBBMbFwQR3WY\"]},\"contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x508f2149e7f4d3370c6895d2c22de478a1cd910a2c1a25511124cee1d83fbcbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09dc710bcff2690c53aae1459aac8cdfad95db45b3bf748f837cb856c5872765\",\"dweb:/ipfs/QmZNfaa9sMNC4iM1gqhJWZzKiE8nQ3wuE6NJMAxZWYK771\"]},\"contracts/interfaces/IDiamondLoupe.sol\":{\"keccak256\":\"0xac7e82142cf9e2eb13ba80ba52aa950e4b73aebaec78cbd747ec1b4598b01c08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40d8edd4ef84f1cea2dbd614208f29982acd1731e93b045a3651e146fccb581e\",\"dweb:/ipfs/QmPcJ67WHWkVTNGubhFyEvBFxWLBCP3QvzwSzZgvZAQYA2\"]},\"contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0xd98d62a7cfec5b7bb199e6b11dda1427f68d97c1e890226846e444c5fdd705ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eda955f978dc917e6d719bde0d70c4e63dd73c9dd88fcebbf65b4cb75611117e\",\"dweb:/ipfs/Qmf9ohhubgRVGpudeE7XUxjBhG25MAnLmFa1qjxnHYpZQm\"]},\"contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x90ee0607a08a2d6e21132dc60810936cc5cd65b077d59f02dfb42c6b8be52b2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0038bb2c3e17abc99cbd60166a8aac884b313a6ad929ebcfb4f6770cd5f02ffe\",\"dweb:/ipfs/QmZYsuSrQu5P4RX1yS6YT2r7VTaAPaWkQb58bpfAt4Ya9r\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xcfbfd19eb6ef183ce50be075607af71e64f9a5ca27c02a85cbfff879bfc737dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d48f27073c98b5642ed46b44a248ecb898129ee9643721603d73840a09ce1788\",\"dweb:/ipfs/Qma8Nj2vE62mjXfqBdLHTNCSGDz4XYceVLoCxjSWrz6wfP\"]},\"contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0x6eb3c263c07f182d27d3b60990e5411bb8367c8b72d951245191c8f26db91931\",\"urls\":[\"bzz-raw://6faa1b8e94fcb85bd342176447948a98b6dec378f893b6273e74e49d778440de\",\"dweb:/ipfs/QmRvDKdZkPdLkrjh6qayWj9vPkbf4fo4nPKnQ7CYjoQRd3\"]},\"contracts/interfaces/IVaultDiamond.sol\":{\"keccak256\":\"0xd664e704ba58296a844c781c15cb987be675508dd6b264d2d37d77c3f23d74f9\",\"urls\":[\"bzz-raw://b8697a5b98f2a7d98c4c55126bcbde8e00e9e6b080460deb1991dfc6b95c0ef4\",\"dweb:/ipfs/Qmd1d21kSC86onvDsHc7j7r7LDAfJsksUgXNCN2Q3PMVix\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptyCalldata"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "ImmutableFunction"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InValidFacetCutAction"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InitCallFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MustBeZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoCode"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoSelectorsInFacet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonEmptyCalldata"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "NonExistentSelector"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "SameSelectorReplacement"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "SelectorExists"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "slot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlotWrittenTo",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_diamondCutFacet",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_backup",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/solmate/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":solmate.git/=lib/solmate/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Vault/VaultDiamond.sol": "VaultDiamond"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Vault/VaultDiamond.sol": {
        "keccak256": "0x7031c76793ef51627935651e487cf5a5cc62b8eacfed3184d81a33cc2c6f8ac9",
        "urls": [
          "bzz-raw://7912e7dc739fb243ce70d0e08d77e9078041dfe80cd714552b3073019f92d117",
          "dweb:/ipfs/QmVeuuBQMaN3R7L5XvGKhxBGhXwNQ67i8MhDnydbzRB6hG"
        ],
        "license": "MIT"
      },
      "contracts/Vault/facets/DiamondCutFacet.sol": {
        "keccak256": "0x88e9c2be0d5b1b9bca07a0c3aeacc9a61b68fea5eb15c9748b3cc317d8528f01",
        "urls": [
          "bzz-raw://17911d35bb30ede341e6db932abd14c8338e41108fded031cff05b1cf29bbf3d",
          "dweb:/ipfs/QmXYZeUc2ZcEFowAkqXaBU6uUDRQEGCgwjBd13WRnZi1PQ"
        ],
        "license": "MIT"
      },
      "contracts/Vault/facets/DiamondLoupeFacet.sol": {
        "keccak256": "0xad9d4671de17dec310b15ef69e709ed59a3f1e78020b8866a1dbe9a9a3470dc9",
        "urls": [
          "bzz-raw://08defeb9fb9051461263afde95cc3a748525f477eb2fb9e5510ac759df5c233d",
          "dweb:/ipfs/QmYLZToc6jEuo9JEWFT5NimzGTX9mz3t5hNQjyxQ8TZwBv"
        ],
        "license": "MIT"
      },
      "contracts/Vault/facets/ERC1155Facet.sol": {
        "keccak256": "0xe308088ade66dc08bf25524396b61729ab155688aad5ff25e75b07d7181f303b",
        "urls": [
          "bzz-raw://ab24cd3d40b7f3b4c3940cc32b3929f6ca5cf40033cf175b3aa163356c8235d2",
          "dweb:/ipfs/QmUZP5Gap5LPFDhayboJE8SoFhxqBYvez57n6ccjog5Wt1"
        ],
        "license": null
      },
      "contracts/Vault/facets/ERC20Facet.sol": {
        "keccak256": "0x4143a253426d9460662f136ed00eba085ec0eca5b78271c6f92258988e8a35e6",
        "urls": [
          "bzz-raw://885c2a7e5f8894592a5b8b4014e245165ba86f8ab4089366acf58ab48b25ec10",
          "dweb:/ipfs/QmNxmbEcjCVje1TrXYVV1vWruoG5GMT3jU5sUWUbb2hJSH"
        ],
        "license": null
      },
      "contracts/Vault/facets/ERC721Facet.sol": {
        "keccak256": "0x1dbb36011ba23e1e4284542256d43fb217e48b6956d9aa9d38bd9d0fcc83ba19",
        "urls": [
          "bzz-raw://991c47ec8ad245a7b9fc2034ede3684dcd5dd83cffc9d9e4e7f32d53e779e460",
          "dweb:/ipfs/QmTWzNGM1PZgSrVikvCGp397B825Q2caRHYYhEHT7KUpJg"
        ],
        "license": null
      },
      "contracts/Vault/facets/VaultFacet.sol": {
        "keccak256": "0xa756bf80494f0a297d32902e2c8e7502aa0b9a6ad69355e3208443c63106355d",
        "urls": [
          "bzz-raw://8c00ba4843b0664758c9c237c47e818f3affc9063e378aea341afe5c874d806b",
          "dweb:/ipfs/Qmdq7JVAaoKDqCzaWpFjb6WXjTK2TMKb9SvdTH7cnVLy9D"
        ],
        "license": null
      },
      "contracts/Vault/libraries/LibDiamond.sol": {
        "keccak256": "0x74ef0c6c6f016c0aab75fd6df0e7722e374fc6fa06f29c257284a86611869e51",
        "urls": [
          "bzz-raw://00872f146f635a9e60738f9118dc128b4337b2a8d4e8a93ffc43897425009220",
          "dweb:/ipfs/QmStyBN89ySFTvdPC3GHDadFEsexoVLVU5t2f6DtwmMHDf"
        ],
        "license": "MIT"
      },
      "contracts/Vault/libraries/LibKeep.sol": {
        "keccak256": "0x9d9e676fb7ffb9fe3a7dc9fb6da4859ccca5fe173a2f8ccd3e86f0978bca7aca",
        "urls": [
          "bzz-raw://91c5c9ee3e12f8db82464a9afb2c1f96cd1d9feb5d070436d6390ccb0d53c379",
          "dweb:/ipfs/QmUS58RGN8rFNd9bjBmXxiBWtdkT9YubtKDuMHmdVXaPeV"
        ],
        "license": null
      },
      "contracts/Vault/libraries/LibKeepHelpers.sol": {
        "keccak256": "0x5fe31c710dbfb3de2c2e4bb1ce6f100e0e6c74d7902227b0aec76497898ff24e",
        "urls": [
          "bzz-raw://4fe30d032683a6b38b7acabe84131e38015487507b326f245a4207eb26d64a50",
          "dweb:/ipfs/QmS8mm7YDYb8RMdrFDUpVFYvd3DmitdEubMSksoL5GmXEx"
        ],
        "license": null
      },
      "contracts/Vault/libraries/LibLayoutSilo.sol": {
        "keccak256": "0x317b8ea028b556e2e7c8320382ba30ac930d52b7204cbe75c0573b9645f5a8c0",
        "urls": [
          "bzz-raw://b57226670dd646eef339641ec7b8b396727d198ed19f1322e8ba468be9d9a620",
          "dweb:/ipfs/QmaE8snxxGmASTM8VZvLGQihu61gtHwAPMLxRsZbmCToEo"
        ],
        "license": null
      },
      "contracts/Vault/libraries/LibStorageBinder.sol": {
        "keccak256": "0x51c77b65e88d8d626ad2880b6ce6087a857785fc9e69a710722ec07ec6435ea1",
        "urls": [
          "bzz-raw://3ef0850a0db792a337e367a6e28069887a337b4e4d946fd255d7f3af8ca8fe05",
          "dweb:/ipfs/QmNffZEeQXKALdArjEKjyJXwMxbMXJjUihWzaKH4ijbGnC"
        ],
        "license": null
      },
      "contracts/Vault/libraries/LibTokens.sol": {
        "keccak256": "0x09b296abe5056b95e1b4070448a8a24d908d5c8fff773475edfd31950d9c5068",
        "urls": [
          "bzz-raw://df4056ef19ecb6ee3663015791ea8642bc0f9ce427eb712e92215abba8408180",
          "dweb:/ipfs/QmU5RQzupokR6v5eUGkekwSMg9fvEpS5sWUdXRqrRQG3bJ"
        ],
        "license": null
      },
      "contracts/Vault/libraries/LibVaultStorage.sol": {
        "keccak256": "0x47e4552d55bf7c1a9398ac811df19648349fed904fe5d95dd1ea01e07e14dcbe",
        "urls": [
          "bzz-raw://a842385d4fc9d07d9a6bd944af7343fab160b15618d5f085c05149e994f83889",
          "dweb:/ipfs/QmRmJkkAZr7TiktGPfhAPPuCKqbyeUXcpjYBBMbFwQR3WY"
        ],
        "license": null
      },
      "contracts/interfaces/IDiamondCut.sol": {
        "keccak256": "0x508f2149e7f4d3370c6895d2c22de478a1cd910a2c1a25511124cee1d83fbcbf",
        "urls": [
          "bzz-raw://09dc710bcff2690c53aae1459aac8cdfad95db45b3bf748f837cb856c5872765",
          "dweb:/ipfs/QmZNfaa9sMNC4iM1gqhJWZzKiE8nQ3wuE6NJMAxZWYK771"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDiamondLoupe.sol": {
        "keccak256": "0xac7e82142cf9e2eb13ba80ba52aa950e4b73aebaec78cbd747ec1b4598b01c08",
        "urls": [
          "bzz-raw://40d8edd4ef84f1cea2dbd614208f29982acd1731e93b045a3651e146fccb581e",
          "dweb:/ipfs/QmPcJ67WHWkVTNGubhFyEvBFxWLBCP3QvzwSzZgvZAQYA2"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC1155.sol": {
        "keccak256": "0xd98d62a7cfec5b7bb199e6b11dda1427f68d97c1e890226846e444c5fdd705ba",
        "urls": [
          "bzz-raw://eda955f978dc917e6d719bde0d70c4e63dd73c9dd88fcebbf65b4cb75611117e",
          "dweb:/ipfs/Qmf9ohhubgRVGpudeE7XUxjBhG25MAnLmFa1qjxnHYpZQm"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC165.sol": {
        "keccak256": "0x90ee0607a08a2d6e21132dc60810936cc5cd65b077d59f02dfb42c6b8be52b2c",
        "urls": [
          "bzz-raw://0038bb2c3e17abc99cbd60166a8aac884b313a6ad929ebcfb4f6770cd5f02ffe",
          "dweb:/ipfs/QmZYsuSrQu5P4RX1yS6YT2r7VTaAPaWkQb58bpfAt4Ya9r"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC20.sol": {
        "keccak256": "0xcfbfd19eb6ef183ce50be075607af71e64f9a5ca27c02a85cbfff879bfc737dc",
        "urls": [
          "bzz-raw://d48f27073c98b5642ed46b44a248ecb898129ee9643721603d73840a09ce1788",
          "dweb:/ipfs/Qma8Nj2vE62mjXfqBdLHTNCSGDz4XYceVLoCxjSWrz6wfP"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IERC721.sol": {
        "keccak256": "0x6eb3c263c07f182d27d3b60990e5411bb8367c8b72d951245191c8f26db91931",
        "urls": [
          "bzz-raw://6faa1b8e94fcb85bd342176447948a98b6dec378f893b6273e74e49d778440de",
          "dweb:/ipfs/QmRvDKdZkPdLkrjh6qayWj9vPkbf4fo4nPKnQ7CYjoQRd3"
        ],
        "license": null
      },
      "contracts/interfaces/IVaultDiamond.sol": {
        "keccak256": "0xd664e704ba58296a844c781c15cb987be675508dd6b264d2d37d77c3f23d74f9",
        "urls": [
          "bzz-raw://b8697a5b98f2a7d98c4c55126bcbde8e00e9e6b080460deb1991dfc6b95c0ef4",
          "dweb:/ipfs/Qmd1d21kSC86onvDsHc7j7r7LDAfJsksUgXNCN2Q3PMVix"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Vault/VaultDiamond.sol",
    "id": 192,
    "exportedSymbols": {
      "DiamondCutFacet": [
        272
      ],
      "DiamondLoupeFacet": [
        447
      ],
      "ERC1155Facet": [
        894
      ],
      "ERC1155_ACCEPTED": [
        2863
      ],
      "ERC1155_BATCH_ACCEPTED": [
        2866
      ],
      "ERC20Facet": [
        1155
      ],
      "ERC721Facet": [
        1473
      ],
      "ERC721WithCall": [
        2869
      ],
      "FacetAddressAndPosition": [
        6157
      ],
      "FacetAndSelectorData": [
        6177
      ],
      "FacetFunctionSelectors": [
        6163
      ],
      "Guards": [
        7287
      ],
      "IDiamondCut": [
        7325
      ],
      "IDiamondLoupe": [
        7366
      ],
      "IERC1155": [
        7474
      ],
      "IERC165": [
        7485
      ],
      "IERC20": [
        7563
      ],
      "IERC721": [
        7639
      ],
      "IVaultDiamond": [
        7659
      ],
      "InterFaceData": [
        6182
      ],
      "LibDiamond": [
        2849
      ],
      "LibKeep": [
        5863
      ],
      "LibKeepHelpers": [
        6150
      ],
      "LibStorageBinder": [
        6452
      ],
      "LibTokens": [
        6936
      ],
      "NoPermissions": [
        6953
      ],
      "VaultData": [
        6272
      ],
      "VaultDiamond": [
        191
      ],
      "VaultFacet": [
        1995
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3289:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "32:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "395:54:0",
        "nodes": [],
        "absolutePath": "contracts/Vault/libraries/LibDiamond.sol",
        "file": "./libraries/LibDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 192,
        "sourceUnit": 2850,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "LibDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2849,
              "src": "403:10:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "450:58:0",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDiamondCut.sol",
        "file": "../interfaces/IDiamondCut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 192,
        "sourceUnit": 7326,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "IDiamondCut",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7325,
              "src": "458:11:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6,
        "nodeType": "ImportDirective",
        "src": "510:39:0",
        "nodes": [],
        "absolutePath": "contracts/Vault/libraries/LibLayoutSilo.sol",
        "file": "./libraries/LibLayoutSilo.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 192,
        "sourceUnit": 6273,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7,
        "nodeType": "ImportDirective",
        "src": "550:42:0",
        "nodes": [],
        "absolutePath": "contracts/Vault/libraries/LibStorageBinder.sol",
        "file": "./libraries/LibStorageBinder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 192,
        "sourceUnit": 6453,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8,
        "nodeType": "ImportDirective",
        "src": "638:41:0",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IVaultDiamond.sol",
        "file": "../interfaces/IVaultDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 192,
        "sourceUnit": 7660,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 191,
        "nodeType": "ContractDefinition",
        "src": "681:2639:0",
        "nodes": [
          {
            "id": 10,
            "nodeType": "VariableDeclaration",
            "src": "709:10:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_init",
            "nameLocation": "714:5:0",
            "scope": 191,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "709:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 14,
            "nodeType": "EventDefinition",
            "src": "725:34:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "ea758a5dc298aa5c6654519a7bef61995e50b3ba4767069e0238a28b7f407b27",
            "name": "SlotWrittenTo",
            "nameLocation": "731:13:0",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "slot",
                  "nameLocation": "753:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "745:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "744:14:0"
            }
          },
          {
            "id": 29,
            "nodeType": "FunctionDefinition",
            "src": "765:123:0",
            "nodes": [],
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "787:101:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    18
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18,
                      "mutability": "mutable",
                      "name": "_contractOwner",
                      "nameLocation": "805:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 28,
                      "src": "797:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 17,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "797:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21,
                  "initialValue": {
                    "expression": {
                      "id": 19,
                      "name": "tx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -26,
                      "src": "822:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_transaction",
                        "typeString": "tx"
                      }
                    },
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "825:6:0",
                    "memberName": "origin",
                    "nodeType": "MemberAccess",
                    "src": "822:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "797:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25,
                        "name": "_contractOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "866:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 22,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2849,
                        "src": "841:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$2849_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "852:13:0",
                      "memberName": "setVaultOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2074,
                      "src": "841:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "841:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "841:40:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "776:2:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "787:0:0"
            },
            "scope": 191,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 147,
            "nodeType": "FunctionDefinition",
            "src": "894:1106:0",
            "nodes": [],
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "958:1042:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38,
                      "mutability": "mutable",
                      "name": "vaultData",
                      "nameLocation": "986:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "968:27:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VaultData_$6272_storage_ptr",
                        "typeString": "struct VaultData"
                      },
                      "typeName": {
                        "id": 37,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 36,
                          "name": "VaultData",
                          "nameLocations": [
                            "968:9:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6272,
                          "src": "968:9:0"
                        },
                        "referencedDeclaration": 6272,
                        "src": "968:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultData_$6272_storage_ptr",
                          "typeString": "struct VaultData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39,
                        "name": "LibStorageBinder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6452,
                        "src": "998:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibStorageBinder_$6452_$",
                          "typeString": "type(library LibStorageBinder)"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1028:26:0",
                      "memberName": "_bindAndReturnVaultStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6451,
                      "src": "998:56:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultData_$6272_storage_ptr_$",
                        "typeString": "function () pure returns (struct VaultData storage pointer)"
                      }
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "998:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VaultData_$6272_storage_ptr",
                      "typeString": "struct VaultData storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "968:88:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1073:6:0",
                        "subExpression": {
                          "id": 44,
                          "name": "_init",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1074:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 43,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1066:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1066:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "1066:14:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 49,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1110:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1114:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1110:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 51,
                                "name": "LibDiamond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2849,
                                "src": "1124:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_LibDiamond_$2849_$",
                                  "typeString": "type(library LibDiamond)"
                                }
                              },
                              "id": 52,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1135:10:0",
                              "memberName": "vaultOwner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2087,
                              "src": "1124:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 53,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1124:23:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1110:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 55,
                              "name": "tx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -26,
                              "src": "1167:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_transaction",
                                "typeString": "tx"
                              }
                            },
                            "id": 56,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1170:6:0",
                            "memberName": "origin",
                            "nodeType": "MemberAccess",
                            "src": "1167:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 57,
                                "name": "LibDiamond",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2849,
                                "src": "1180:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_LibDiamond_$2849_$",
                                  "typeString": "type(library LibDiamond)"
                                }
                              },
                              "id": 58,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1191:10:0",
                              "memberName": "vaultOwner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2087,
                              "src": "1180:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 59,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1180:23:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1167:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1110:93:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1090:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1090:123:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:123:0"
                },
                {
                  "assignments": [
                    69
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69,
                      "mutability": "mutable",
                      "name": "cut",
                      "nameLocation": "1326:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "1296:33:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FacetCut_$7302_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IDiamondCut.FacetCut[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 67,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 66,
                            "name": "IDiamondCut.FacetCut",
                            "nameLocations": [
                              "1296:11:0",
                              "1308:8:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 7302,
                            "src": "1296:20:0"
                          },
                          "referencedDeclaration": 7302,
                          "src": "1296:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetCut_$7302_storage_ptr",
                            "typeString": "struct IDiamondCut.FacetCut"
                          }
                        },
                        "id": 68,
                        "nodeType": "ArrayTypeName",
                        "src": "1296:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$7302_storage_$dyn_storage_ptr",
                          "typeString": "struct IDiamondCut.FacetCut[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1359:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1332:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_FacetCut_$7302_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct IDiamondCut.FacetCut memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 71,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 70,
                            "name": "IDiamondCut.FacetCut",
                            "nameLocations": [
                              "1336:11:0",
                              "1348:8:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 7302,
                            "src": "1336:20:0"
                          },
                          "referencedDeclaration": 7302,
                          "src": "1336:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetCut_$7302_storage_ptr",
                            "typeString": "struct IDiamondCut.FacetCut"
                          }
                        },
                        "id": 72,
                        "nodeType": "ArrayTypeName",
                        "src": "1336:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$7302_storage_$dyn_storage_ptr",
                          "typeString": "struct IDiamondCut.FacetCut[]"
                        }
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1332:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FacetCut_$7302_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1296:65:0"
                },
                {
                  "assignments": [
                    81
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 81,
                      "mutability": "mutable",
                      "name": "functionSelectors",
                      "nameLocation": "1387:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "1371:33:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                        "typeString": "bytes4[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 79,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1371:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 80,
                        "nodeType": "ArrayTypeName",
                        "src": "1371:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1420:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1407:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes4[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 82,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1411:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 83,
                        "nodeType": "ArrayTypeName",
                        "src": "1411:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1407:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                      "typeString": "bytes4[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1371:51:0"
                },
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 88,
                        "name": "functionSelectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1432:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 90,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1450:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1432:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 91,
                          "name": "IDiamondCut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7325,
                          "src": "1455:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDiamondCut_$7325_$",
                            "typeString": "type(contract IDiamondCut)"
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1467:10:0",
                        "memberName": "diamondCut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7314,
                        "src": "1455:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_struct$_FacetCut_$7302_calldata_ptr_$dyn_calldata_ptr_$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
                          "typeString": "function IDiamondCut.diamondCut(struct IDiamondCut.FacetCut calldata[] calldata,address,bytes calldata)"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1478:8:0",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "1455:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1432:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1432:54:0"
                },
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 96,
                        "name": "functionSelectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1496:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 98,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1514:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1496:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 99,
                          "name": "IVaultDiamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7659,
                          "src": "1519:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVaultDiamond_$7659_$",
                            "typeString": "type(contract IVaultDiamond)"
                          }
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1533:9:0",
                        "memberName": "tempOwner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7658,
                        "src": "1519:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_view$__$returns$_t_address_$",
                          "typeString": "function IVaultDiamond.tempOwner() view returns (address)"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1543:8:0",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "1519:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1496:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1496:55:0"
                },
                {
                  "expression": {
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 104,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1561:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$7302_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        }
                      },
                      "id": 106,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1565:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1561:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$7302_memory_ptr",
                        "typeString": "struct IDiamondCut.FacetCut memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 109,
                          "name": "_diamondCutFacet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1619:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 110,
                              "name": "IDiamondCut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7325,
                              "src": "1657:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamondCut_$7325_$",
                                "typeString": "type(contract IDiamondCut)"
                              }
                            },
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1669:14:0",
                            "memberName": "FacetCutAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7293,
                            "src": "1657:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_FacetCutAction_$7293_$",
                              "typeString": "type(enum IDiamondCut.FacetCutAction)"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1684:3:0",
                          "memberName": "Add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7290,
                          "src": "1657:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FacetCutAction_$7293",
                            "typeString": "enum IDiamondCut.FacetCutAction"
                          }
                        },
                        {
                          "id": 113,
                          "name": "functionSelectors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "1720:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_enum$_FacetCutAction_$7293",
                            "typeString": "enum IDiamondCut.FacetCutAction"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                            "typeString": "bytes4[] memory"
                          }
                        ],
                        "expression": {
                          "id": 107,
                          "name": "IDiamondCut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7325,
                          "src": "1570:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDiamondCut_$7325_$",
                            "typeString": "type(contract IDiamondCut)"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1582:8:0",
                        "memberName": "FacetCut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7302,
                        "src": "1570:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FacetCut_$7302_storage_ptr_$",
                          "typeString": "type(struct IDiamondCut.FacetCut storage pointer)"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "1605:12:0",
                        "1649:6:0",
                        "1701:17:0"
                      ],
                      "names": [
                        "facetAddress",
                        "action",
                        "functionSelectors"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1570:178:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$7302_memory_ptr",
                        "typeString": "struct IDiamondCut.FacetCut memory"
                      }
                    },
                    "src": "1561:187:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetCut_$7302_memory_ptr",
                      "typeString": "struct IDiamondCut.FacetCut memory"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:187:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 120,
                        "name": "cut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1781:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$7302_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1794:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1786:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 121,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1786:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1786:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1798:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$7302_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamondCut.FacetCut memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 117,
                        "name": "LibDiamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2849,
                        "src": "1759:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibDiamond_$2849_$",
                          "typeString": "type(library LibDiamond)"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1770:10:0",
                      "memberName": "diamondCut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2215,
                      "src": "1759:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$7302_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1759:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1759:42:0"
                },
                {
                  "expression": {
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 128,
                        "name": "vaultData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "1811:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultData_$6272_storage_ptr",
                          "typeString": "struct VaultData storage pointer"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1821:13:0",
                      "memberName": "backupAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6190,
                      "src": "1811:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 131,
                      "name": "_backup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1837:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1811:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1811:33:0"
                },
                {
                  "expression": {
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 134,
                      "name": "_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1854:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1862:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1854:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:12:0"
                },
                {
                  "assignments": [
                    139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 139,
                      "mutability": "mutable",
                      "name": "_slott",
                      "nameLocation": "1884:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "1876:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 138,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1876:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 140,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1876:14:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1909:48:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1923:24:0",
                        "value": {
                          "name": "vaultData.slot",
                          "nodeType": "YulIdentifier",
                          "src": "1933:14:0"
                        },
                        "variableNames": [
                          {
                            "name": "_slott",
                            "nodeType": "YulIdentifier",
                            "src": "1923:6:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 139,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1923:6:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 38,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "1933:14:0",
                      "suffix": "slot",
                      "valueSize": 1
                    }
                  ],
                  "id": 141,
                  "nodeType": "InlineAssembly",
                  "src": "1900:57:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 143,
                        "name": "_slott",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "1986:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 142,
                      "name": "SlotWrittenTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1972:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1972:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "EmitStatement",
                  "src": "1967:26:0"
                }
              ]
            },
            "functionSelector": "f09a4016",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nameLocation": "903:4:0",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_diamondCutFacet",
                  "nameLocation": "916:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "908:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "_backup",
                  "nameLocation": "942:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "934:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "934:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "907:43:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:0:0"
            },
            "scope": 191,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 186,
            "nodeType": "FunctionDefinition",
            "src": "2126:1157:0",
            "nodes": [],
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "2154:1129:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 152,
                      "mutability": "mutable",
                      "name": "fsData",
                      "nameLocation": "2193:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 185,
                      "src": "2164:35:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetAndSelectorData_$6177_storage_ptr",
                        "typeString": "struct FacetAndSelectorData"
                      },
                      "typeName": {
                        "id": 151,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 150,
                          "name": "FacetAndSelectorData",
                          "nameLocations": [
                            "2164:20:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6177,
                          "src": "2164:20:0"
                        },
                        "referencedDeclaration": 6177,
                        "src": "2164:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FacetAndSelectorData_$6177_storage_ptr",
                          "typeString": "struct FacetAndSelectorData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 156,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 153,
                        "name": "LibStorageBinder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6452,
                        "src": "2202:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibStorageBinder_$6452_$",
                          "typeString": "type(library LibStorageBinder)"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2232:26:0",
                      "memberName": "_bindAndReturnFacetStorage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6389,
                      "src": "2202:56:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_FacetAndSelectorData_$6177_storage_ptr_$",
                        "typeString": "function () pure returns (struct FacetAndSelectorData storage pointer)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2202:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetAndSelectorData_$6177_storage_ptr",
                      "typeString": "struct FacetAndSelectorData storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2164:96:0"
                },
                {
                  "assignments": [
                    158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 158,
                      "mutability": "mutable",
                      "name": "facet",
                      "nameLocation": "2323:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 185,
                      "src": "2315:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 157,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2315:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 165,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "expression": {
                          "id": 159,
                          "name": "fsData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 152,
                          "src": "2331:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetAndSelectorData_$6177_storage_ptr",
                            "typeString": "struct FacetAndSelectorData storage pointer"
                          }
                        },
                        "id": 160,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2338:26:0",
                        "memberName": "selectorToFacetAndPosition",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6168,
                        "src": "2331:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$6157_storage_$",
                          "typeString": "mapping(bytes4 => struct FacetAddressAndPosition storage ref)"
                        }
                      },
                      "id": 163,
                      "indexExpression": {
                        "expression": {
                          "id": 161,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2365:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2369:3:0",
                        "memberName": "sig",
                        "nodeType": "MemberAccess",
                        "src": "2365:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2331:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetAddressAndPosition_$6157_storage",
                        "typeString": "struct FacetAddressAndPosition storage ref"
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2374:12:0",
                    "memberName": "facetAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6154,
                    "src": "2331:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2315:71:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 167,
                          "name": "facet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 158,
                          "src": "2404:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2421:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2413:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 168,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2413:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2413:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2404:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4469616d6f6e643a2046756e6374696f6e20646f6573206e6f74206578697374",
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2425:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e6486aeb9db70da259b7171a739046119facaec2d8a6bd46f1145fe8391014a",
                          "typeString": "literal_string \"Diamond: Function does not exist\""
                        },
                        "value": "Diamond: Function does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e6486aeb9db70da259b7171a739046119facaec2d8a6bd46f1145fe8391014a",
                          "typeString": "literal_string \"Diamond: Function does not exist\""
                        }
                      ],
                      "id": 166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2396:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2396:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "2396:64:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2568:584:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2651:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2654:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2657:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2657:14:0"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "2638:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2638:34:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2638:34:0"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2738:65:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "2765:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2765:5:0"
                            },
                            {
                              "name": "facet",
                              "nodeType": "YulIdentifier",
                              "src": "2772:5:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2779:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2782:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2782:14:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2798:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2801:1:0",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "2752:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2752:51:0"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "2742:6:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2867:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2870:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "2873:14:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2873:16:0"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "2852:14:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2852:38:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2852:38:0"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3003:59:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3028:1:0",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "3031:14:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3031:16:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "3021:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3021:27:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3021:27:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2996:66:0",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3001:1:0",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3083:59:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3108:1:0",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "3111:14:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3111:16:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "3101:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3101:27:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3101:27:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "3075:67:0",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "2977:6:0"
                        },
                        "nodeType": "YulSwitch",
                        "src": "2970:172:0"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 158,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2772:5:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 176,
                  "nodeType": "InlineAssembly",
                  "src": "2559:593:0"
                },
                {
                  "assignments": [
                    178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 178,
                      "mutability": "mutable",
                      "name": "_slott",
                      "nameLocation": "3170:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 185,
                      "src": "3162:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 177,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3162:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 179,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3162:14:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3195:45:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3209:21:0",
                        "value": {
                          "name": "fsData.slot",
                          "nodeType": "YulIdentifier",
                          "src": "3219:11:0"
                        },
                        "variableNames": [
                          {
                            "name": "_slott",
                            "nodeType": "YulIdentifier",
                            "src": "3209:6:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 178,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3209:6:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 152,
                      "isOffset": false,
                      "isSlot": true,
                      "src": "3219:11:0",
                      "suffix": "slot",
                      "valueSize": 1
                    }
                  ],
                  "id": 180,
                  "nodeType": "InlineAssembly",
                  "src": "3186:54:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 182,
                        "name": "_slott",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "3269:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 181,
                      "name": "SlotWrittenTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "3255:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3255:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "EmitStatement",
                  "src": "3250:26:0"
                }
              ]
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2134:2:0"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2154:0:0"
            },
            "scope": 191,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 190,
            "nodeType": "FunctionDefinition",
            "src": "3289:29:0",
            "nodes": [],
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "3316:2:0",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3296:2:0"
            },
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3316:0:0"
            },
            "scope": 191,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "VaultDiamond",
        "contractDependencies": [
          5863
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          191
        ],
        "name": "VaultDiamond",
        "nameLocation": "690:12:0",
        "scope": 192,
        "usedErrors": [
          2003,
          2007,
          2009,
          2013,
          2017,
          2019,
          2021,
          2025,
          2029,
          2031,
          2033,
          2035
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 0
}